<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="br-pt"
 lang="br-pt" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>br-pt:stl:list:erase</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-07-24T14:29:52-0700" />
<meta name="keywords" content="br-pt,stl,list,erase" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/br-pt/stl/list/erase?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=br-pt:stl:list" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/br-pt/stl/list/erase" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/br-pt/stl/list/erase" />
<link rel="canonical" href="erase" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='br-pt:stl:list';var JSINFO = {"id":"br-pt:stl:list:erase","namespace":"br-pt:stl:list"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="erase" id="erase">erase</a></h2>
<div class="level2">

<p>
Syntaxe:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;list&gt;</span>
    iterator erase<span class="br0">&#40;</span> iterator pos <span class="br0">&#41;</span><span class="sy0">;</span>
    iterator erase<span class="br0">&#40;</span> iterator inicio<span class="sy0">,</span> iterator fim <span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
A primeir função apaga o elemento na posição <strong>pos</strong>, e a segunda apaga os elementos entre <strong>inicio</strong> e <strong>fim</strong> (incluindo <strong>inicio</strong> e excluindo <strong>fim</strong>). Ambas retornam um iterador apontando para o elemento imediatamente após o último elemento apagado.
</p>

<p>
A primeira versão de <strong>erase</strong> executa em <a href="http://www.cppreference.com/wiki/br-pt/complexity" class="wikilink2" title="br-pt:complexity" rel="nofollow">tempo constante</a>. A versão que apaga múltiplos elementos executa em <a href="http://www.cppreference.com/wiki/br-pt/complexity" class="wikilink2" title="br-pt:complexity" rel="nofollow">tempo linear</a>.
</p>

<p>
Listas têm a importante propriedade de que inserção e divisão não invlidam iteradores para elementos da lista, e a remoção de elementos invalida apenas os iteradores que apontam para os elementos retirados.
</p>

<p>
A ordem dos iteradores pode mudar (ou seja, list&lt;T&gt;::iterator pode ter um antecessor ou sucessos diferente após as operações), mas os iteradores em si não serão invalidados ou apontarão para elementos diferentes a não ser que essa mudança seja explícita e proposital.
</p>

<p>
Por exemplo:
</p>
<pre class="c code c++" style="font-family:monospace;">   <span class="co1">// Cria uma lista, e a preenche com os dez primeiros caracteres do alfabeto</span>
   list<span class="sy0">&lt;</span>char<span class="sy0">&gt;</span> alphaList<span class="sy0">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">10</span><span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     alphaList.<span class="me1">push_back</span><span class="br0">&#40;</span> i <span class="sy0">+</span> 65 <span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   <span class="kw4">int</span> size <span class="sy0">=</span> alphaList.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   list<span class="sy0">&lt;</span>char<span class="sy0">&gt;::</span><span class="me2">iterator</span> startIterator<span class="sy0">;</span>
   list<span class="sy0">&lt;</span>char<span class="sy0">&gt;::</span><span class="me2">iterator</span> tempIterator<span class="sy0">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> size<span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     startIterator <span class="sy0">=</span> alphaList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
     alphaList.<span class="me1">erase</span><span class="br0">&#40;</span> startIterator <span class="br0">&#41;</span><span class="sy0">;</span>
     <span class="co1">// Display the list</span>
     copy<span class="br0">&#40;</span> alphaList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> alphaList.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> ostream_iterator<span class="sy0">&lt;</span>char<span class="sy0">&gt;</span><span class="br0">&#40;</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
   <span class="br0">&#125;</span></pre>
<p>
O código acima gera a seguinte saída:
</p>
<pre class="code">
   BCDEFGHIJ
   CDEFGHIJ
   DEFGHIJ
   EFGHIJ
   FGHIJ
   GHIJ
   HIJ
   IJ
   J</pre>
<p>
No próximo exemplo, erase() é chamada com dos iteradores para apagar um intervalos de elementos de uma lista:
</p>
<pre class="c code c++" style="font-family:monospace;">   <span class="co1">// Cria uma lista, e a preenche com os dez primeiros caracteres do alfabeto</span>
   list<span class="sy0">&lt;</span>char<span class="sy0">&gt;</span> alphaList<span class="sy0">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">10</span><span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     alphaList.<span class="me1">push_back</span><span class="br0">&#40;</span> i <span class="sy0">+</span> 65 <span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   <span class="co1">// Mostra a lista completa</span>
   copy<span class="br0">&#40;</span> alphaList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> alphaList.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> ostream_iterator<span class="sy0">&lt;</span>char<span class="sy0">&gt;</span><span class="br0">&#40;</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
&nbsp;
   <span class="co1">// Usar erase para retirar todos os elementosda lista, menos</span>
   <span class="co1">// os dois primeiros e os três últimos</span>
   alphaList.<span class="me1">erase</span><span class="br0">&#40;</span> advance<span class="br0">&#40;</span>alphaList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span>2<span class="br0">&#41;</span><span class="sy0">,</span> advance<span class="br0">&#40;</span>alphaList.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,-</span>3<span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="co1">// Mostrar a lista modificada</span>
   copy<span class="br0">&#40;</span> alphaList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> alphaList.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> ostream_iterator<span class="sy0">&lt;</span>char<span class="sy0">&gt;</span><span class="br0">&#40;</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span></pre>
<p>
O código acima gera como saída:
</p>
<pre class="code">
   ABCDEFGHIJ
   ABHIJ</pre>
<p>

Tópicos relacionados: <a href="clear" class="wikilink1" title="br-pt:stl:list:clear">clear</a>, <a href="insert" class="wikilink1" title="br-pt:stl:list:insert">insert</a>, <a href="pop_back" class="wikilink1" title="br-pt:stl:list:pop_back">pop_back</a>, <a href="pop_front" class="wikilink1" title="br-pt:stl:list:pop_front">pop_front</a>, <a href="remove" class="wikilink1" title="br-pt:stl:list:remove">remove</a>, <a href="remove_if" class="wikilink1" title="br-pt:stl:list:remove_if">remove_if</a>
</p>

</div>
<!-- SECTION "erase" [3-] --></div>
</body>
</html>
