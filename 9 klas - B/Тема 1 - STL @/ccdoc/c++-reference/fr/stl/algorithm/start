<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr"
 lang="fr" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>fr:stl:algorithm:start</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-09-01T06:30:44-0700" />
<meta name="keywords" content="fr,stl,algorithm,start" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/fr/stl/algorithm/start?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=fr:stl:algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/fr/stl/algorithm/start" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/fr/stl/algorithm/start" />
<link rel="canonical" href="start" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='fr:stl:algorithm';var JSINFO = {"id":"fr:stl:algorithm:start","namespace":"fr:stl:algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h1><a name="c_algorithmes" id="c_algorithmes">C++ Algorithmes</a></h1>
<div class="level1">

<p>
Les fonctions suivantes sont définies dans &lt;algorithm&gt; et font partie de l&#039;espace de nommage std.
</p>

<p>
Elles s&#039;appliquent généralement sur des séquences d&#039;éléments. Ces séquences peuvent être définies par des itérateurs sur des conteneurs de la STL.

</p>
<table class="inline">
	<tr class="row0">
		<td class="col0"><a href="accumulate" class="wikilink1" title="fr:stl:algorithm:accumulate">accumulate</a></td><td class="col1">calcule la somme d&#039;une séquence d&#039;éléments</td>
	</tr>
	<tr class="row1">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/adjacent_difference" class="wikilink2" title="fr:stl:algorithm:adjacent_difference" rel="nofollow">adjacent_difference</a></td><td class="col1">calcule les différences entre les éléments consécutifs d&#039;une séquence</td>
	</tr>
	<tr class="row2">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/adjacent_find" class="wikilink2" title="fr:stl:algorithm:adjacent_find" rel="nofollow">adjacent_find</a></td><td class="col1">trouve deux éléments adjacents identiques (ou autre relation…)</td>
	</tr>
	<tr class="row3">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/binary_search" class="wikilink2" title="fr:stl:algorithm:binary_search" rel="nofollow">binary_search</a></td><td class="col1">indique si un élément est trouvé dans une séquence donnée</td>
	</tr>
	<tr class="row4">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/copy" class="wikilink2" title="fr:stl:algorithm:copy" rel="nofollow">copy</a></td><td class="col1">copie une séquence d&#039;éléments vers un autre endroit</td>
	</tr>
	<tr class="row5">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/copy_backward" class="wikilink2" title="fr:stl:algorithm:copy_backward" rel="nofollow">copy_backward</a></td><td class="col1">copie une séquence d&#039;élément dans l&#039;ordre inverse</td>
	</tr>
	<tr class="row6">
		<td class="col0"><a href="count" class="wikilink1" title="fr:stl:algorithm:count">count</a></td><td class="col1">retourne le nombre d&#039;élément d&#039;une séquence correspondant à une valeur donnée</td>
	</tr>
	<tr class="row7">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/count_if" class="wikilink2" title="fr:stl:algorithm:count_if" rel="nofollow">count_if</a></td><td class="col1">retourne le nombre d&#039;éléments pour lequel un prédicat est vrai</td>
	</tr>
	<tr class="row8">
		<td class="col0"><a href="equal" class="wikilink1" title="fr:stl:algorithm:equal">equal</a></td><td class="col1">indique si deux ensembles d&#039;éléments sont identiques</td>
	</tr>
	<tr class="row9">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/equal_range" class="wikilink2" title="fr:stl:algorithm:equal_range" rel="nofollow">equal_range</a></td><td class="col1">retourne une sous-séquence d&#039;éléments égaux à un élément donnée</td>
	</tr>
	<tr class="row10">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/fill" class="wikilink2" title="fr:stl:algorithm:fill" rel="nofollow">fill</a></td><td class="col1">fixe à une valeur donnée les éléments d&#039;une séquence</td>
	</tr>
	<tr class="row11">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/fill_n" class="wikilink2" title="fr:stl:algorithm:fill_n" rel="nofollow">fill_n</a></td><td class="col1">fixe à une valeur donnée les n premiers éléments d&#039;une séquence</td>
	</tr>
	<tr class="row12">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/find" class="wikilink2" title="fr:stl:algorithm:find" rel="nofollow">find</a></td><td class="col1">trouve la première occurrence d&#039;une valeur dans une séquence donnée</td>
	</tr>
	<tr class="row13">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/find_end" class="wikilink2" title="fr:stl:algorithm:find_end" rel="nofollow">find_end</a></td><td class="col1">trouve la dernière occurrence d&#039;une valeur dans une séquence donnée</td>
	</tr>
	<tr class="row14">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/find_first_of" class="wikilink2" title="fr:stl:algorithm:find_first_of" rel="nofollow">find_first_of</a></td><td class="col1">trouve la première occurence d&#039;un des éléments d&#039;une séquence dans une autre séquence</td>
	</tr>
	<tr class="row15">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/find_if" class="wikilink2" title="fr:stl:algorithm:find_if" rel="nofollow">find_if</a></td><td class="col1">trouve le premier élément pour lequel un prédicat est vrai</td>
	</tr>
	<tr class="row16">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/for_each" class="wikilink2" title="fr:stl:algorithm:for_each" rel="nofollow">for_each</a></td><td class="col1">applique une fonction à chaque élément d&#039;une séquence</td>
	</tr>
	<tr class="row17">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/generate" class="wikilink2" title="fr:stl:algorithm:generate" rel="nofollow">generate</a></td><td class="col1">génère une séquence à partir des résultats retourné par une fonction donnée</td>
	</tr>
	<tr class="row18">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/generate_n" class="wikilink2" title="fr:stl:algorithm:generate_n" rel="nofollow">generate_n</a></td><td class="col1">génère une séquence à partir des résultats retourné par n appels à une fonction donnée</td>
	</tr>
	<tr class="row19">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/includes" class="wikilink2" title="fr:stl:algorithm:includes" rel="nofollow">includes</a></td><td class="col1">retourne vrai si un ensemble donné est inclus dans un autre</td>
	</tr>
	<tr class="row20">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/inner_product" class="wikilink2" title="fr:stl:algorithm:inner_product" rel="nofollow">inner_product</a></td><td class="col1">calcule le produit scalaire de deux séquences</td>
	</tr>
	<tr class="row21">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/inplace_merge" class="wikilink2" title="fr:stl:algorithm:inplace_merge" rel="nofollow">inplace_merge</a></td><td class="col1">fusionne deux séquences ordonnées</td>
	</tr>
	<tr class="row22">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/is_heap" class="wikilink2" title="fr:stl:algorithm:is_heap" rel="nofollow">is_heap</a></td><td class="col1">returns true if a given range is a heap</td>
	</tr>
	<tr class="row23">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/iter_swap" class="wikilink2" title="fr:stl:algorithm:iter_swap" rel="nofollow">iter_swap</a></td><td class="col1">échange deux éléments pointés par des itérateurs</td>
	</tr>
	<tr class="row24">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/lexicographical_compare" class="wikilink2" title="fr:stl:algorithm:lexicographical_compare" rel="nofollow">lexicographical_compare</a></td><td class="col1">compare deux éléments selon l&#039;ordre lexicographique</td>
	</tr>
	<tr class="row25">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/lower_bound" class="wikilink2" title="fr:stl:algorithm:lower_bound" rel="nofollow">lower_bound</a></td><td class="col1">cherche le premier endroit où une valeur peut être insérée en conservant l&#039;ordre d&#039;une séquence</td>
	</tr>
	<tr class="row26">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/make_heap" class="wikilink2" title="fr:stl:algorithm:make_heap" rel="nofollow">make_heap</a></td><td class="col1">creates a heap out of a range of elements</td>
	</tr>
	<tr class="row27">
		<td class="col0"><a href="max" class="wikilink1" title="fr:stl:algorithm:max">max</a></td><td class="col1">retourne le plus grand de deux éléments</td>
	</tr>
	<tr class="row28">
		<td class="col0"><a href="max_element" class="wikilink1" title="fr:stl:algorithm:max_element">max_element</a></td><td class="col1">retourne le plus grand d&#039;une séquence d&#039;éléments</td>
	</tr>
	<tr class="row29">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/merge" class="wikilink2" title="fr:stl:algorithm:merge" rel="nofollow">merge</a></td><td class="col1">fusionne deux séquences ordonnées vers une troisième séquence vide</td>
	</tr>
	<tr class="row30">
		<td class="col0"><a href="min" class="wikilink1" title="fr:stl:algorithm:min">min</a></td><td class="col1">retourne le plus petit de deux éléments</td>
	</tr>
	<tr class="row31">
		<td class="col0"><a href="min_element" class="wikilink1" title="fr:stl:algorithm:min_element">min_element</a></td><td class="col1">retourne le plus petit d&#039;une séquence d&#039;éléments</td>
	</tr>
	<tr class="row32">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/mismatch" class="wikilink2" title="fr:stl:algorithm:mismatch" rel="nofollow">mismatch</a></td><td class="col1">trouve la première position pour laquelle des éléments sont différents</td>
	</tr>
	<tr class="row33">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/next_permutation" class="wikilink2" title="fr:stl:algorithm:next_permutation" rel="nofollow">next_permutation</a></td><td class="col1">generates the next greater lexicographic permutation of a range of elements</td>
	</tr>
	<tr class="row34">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/nth_element" class="wikilink2" title="fr:stl:algorithm:nth_element" rel="nofollow">nth_element</a></td><td class="col1">put one element in its sorted location and make sure that no elements to its left are greater than any elements to its right</td>
	</tr>
	<tr class="row35">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/partial_sort" class="wikilink2" title="fr:stl:algorithm:partial_sort" rel="nofollow">partial_sort</a></td><td class="col1">sort the first N elements of a range</td>
	</tr>
	<tr class="row36">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/partial_sort_copy" class="wikilink2" title="fr:stl:algorithm:partial_sort_copy" rel="nofollow">partial_sort_copy</a></td><td class="col1">copy and partially sort a range of elements</td>
	</tr>
	<tr class="row37">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/partial_sum" class="wikilink2" title="fr:stl:algorithm:partial_sum" rel="nofollow">partial_sum</a></td><td class="col1">compute the partial sum of a range of elements</td>
	</tr>
	<tr class="row38">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/partition" class="wikilink2" title="fr:stl:algorithm:partition" rel="nofollow">partition</a></td><td class="col1">divide a range of elements into two groups</td>
	</tr>
	<tr class="row39">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/pop_heap" class="wikilink2" title="fr:stl:algorithm:pop_heap" rel="nofollow">pop_heap</a></td><td class="col1">remove the largest element from a heap</td>
	</tr>
	<tr class="row40">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/prev_permutation" class="wikilink2" title="fr:stl:algorithm:prev_permutation" rel="nofollow">prev_permutation</a></td><td class="col1">generates the next smaller lexicographic permutation of a range of elements</td>
	</tr>
	<tr class="row41">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/push_heap" class="wikilink2" title="fr:stl:algorithm:push_heap" rel="nofollow">push_heap</a></td><td class="col1">add an element to a heap</td>
	</tr>
	<tr class="row42">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/random_shuffle" class="wikilink2" title="fr:stl:algorithm:random_shuffle" rel="nofollow">random_shuffle</a></td><td class="col1">randomly re-order elements in some range</td>
	</tr>
	<tr class="row43">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/remove" class="wikilink2" title="fr:stl:algorithm:remove" rel="nofollow">remove</a></td><td class="col1">remove elements equal to certain value</td>
	</tr>
	<tr class="row44">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/remove_copy" class="wikilink2" title="fr:stl:algorithm:remove_copy" rel="nofollow">remove_copy</a></td><td class="col1">copy a range of elements omitting those that match a certian value</td>
	</tr>
	<tr class="row45">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/remove_copy_if" class="wikilink2" title="fr:stl:algorithm:remove_copy_if" rel="nofollow">remove_copy_if</a></td><td class="col1">create a copy of a range of elements, omitting any for which a predicate is true</td>
	</tr>
	<tr class="row46">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/remove_if" class="wikilink2" title="fr:stl:algorithm:remove_if" rel="nofollow">remove_if</a></td><td class="col1">remove all elements for which a predicate is true</td>
	</tr>
	<tr class="row47">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/replace" class="wikilink2" title="fr:stl:algorithm:replace" rel="nofollow">replace</a></td><td class="col1">replace every occurrence of some value in a range with another value</td>
	</tr>
	<tr class="row48">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/replace_copy" class="wikilink2" title="fr:stl:algorithm:replace_copy" rel="nofollow">replace_copy</a></td><td class="col1">copy a range, replacing certain elements with new ones</td>
	</tr>
	<tr class="row49">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/replace_copy_if" class="wikilink2" title="fr:stl:algorithm:replace_copy_if" rel="nofollow">replace_copy_if</a></td><td class="col1">copy a range of elements, replacing those for which a predicate is true</td>
	</tr>
	<tr class="row50">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/replace_if" class="wikilink2" title="fr:stl:algorithm:replace_if" rel="nofollow">replace_if</a></td><td class="col1">change the values of elements for which a predicate is true</td>
	</tr>
	<tr class="row51">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/reverse" class="wikilink2" title="fr:stl:algorithm:reverse" rel="nofollow">reverse</a></td><td class="col1">reverse elements in some range</td>
	</tr>
	<tr class="row52">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/reverse_copy" class="wikilink2" title="fr:stl:algorithm:reverse_copy" rel="nofollow">reverse_copy</a></td><td class="col1">create a copy of a range that is reversed</td>
	</tr>
	<tr class="row53">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/rotate" class="wikilink2" title="fr:stl:algorithm:rotate" rel="nofollow">rotate</a></td><td class="col1">move the elements in some range to the left by some amount</td>
	</tr>
	<tr class="row54">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/rotate_copy" class="wikilink2" title="fr:stl:algorithm:rotate_copy" rel="nofollow">rotate_copy</a></td><td class="col1">copy and rotate a range of elements</td>
	</tr>
	<tr class="row55">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/search" class="wikilink2" title="fr:stl:algorithm:search" rel="nofollow">search</a></td><td class="col1">search for a range of elements</td>
	</tr>
	<tr class="row56">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/search_n" class="wikilink2" title="fr:stl:algorithm:search_n" rel="nofollow">search_n</a></td><td class="col1">search for N consecutive copies of an element in some range</td>
	</tr>
	<tr class="row57">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/set_difference" class="wikilink2" title="fr:stl:algorithm:set_difference" rel="nofollow">set_difference</a></td><td class="col1">computes the difference between two sets</td>
	</tr>
	<tr class="row58">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/set_intersection" class="wikilink2" title="fr:stl:algorithm:set_intersection" rel="nofollow">set_intersection</a></td><td class="col1">computes the intersection of two sets</td>
	</tr>
	<tr class="row59">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/set_symmetric_difference" class="wikilink2" title="fr:stl:algorithm:set_symmetric_difference" rel="nofollow">set_symmetric_difference</a></td><td class="col1">computes the symmetric difference between two sets</td>
	</tr>
	<tr class="row60">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/set_union" class="wikilink2" title="fr:stl:algorithm:set_union" rel="nofollow">set_union</a></td><td class="col1">computes the union of two sets</td>
	</tr>
	<tr class="row61">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/sort" class="wikilink2" title="fr:stl:algorithm:sort" rel="nofollow">sort</a></td><td class="col1">sort a range into ascending order</td>
	</tr>
	<tr class="row62">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/sort_heap" class="wikilink2" title="fr:stl:algorithm:sort_heap" rel="nofollow">sort_heap</a></td><td class="col1">turns a heap into a sorted range of elements</td>
	</tr>
	<tr class="row63">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/stable_partition" class="wikilink2" title="fr:stl:algorithm:stable_partition" rel="nofollow">stable_partition</a></td><td class="col1">divide elements into two groups while preserving their relative order</td>
	</tr>
	<tr class="row64">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/stable_sort" class="wikilink2" title="fr:stl:algorithm:stable_sort" rel="nofollow">stable_sort</a></td><td class="col1">sort a range of elements while preserving order between equal elements</td>
	</tr>
	<tr class="row65">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/swap" class="wikilink2" title="fr:stl:algorithm:swap" rel="nofollow">swap</a></td><td class="col1">swap the values of two objects</td>
	</tr>
	<tr class="row66">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/swap_ranges" class="wikilink2" title="fr:stl:algorithm:swap_ranges" rel="nofollow">swap_ranges</a></td><td class="col1">swaps two ranges of elements</td>
	</tr>
	<tr class="row67">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/transform" class="wikilink2" title="fr:stl:algorithm:transform" rel="nofollow">transform</a></td><td class="col1">applies a function to a range of elements</td>
	</tr>
	<tr class="row68">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/unique" class="wikilink2" title="fr:stl:algorithm:unique" rel="nofollow">unique</a></td><td class="col1">remove consecutive duplicate elements in a range</td>
	</tr>
	<tr class="row69">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/unique_copy" class="wikilink2" title="fr:stl:algorithm:unique_copy" rel="nofollow">unique_copy</a></td><td class="col1">creates a copy of some range of elements that contains no consecutive duplicates</td>
	</tr>
	<tr class="row70">
		<td class="col0"><a href="http://www.cppreference.com/wiki/fr/stl/algorithm/upper_bound" class="wikilink2" title="fr:stl:algorithm:upper_bound" rel="nofollow">upper_bound</a></td><td class="col1">searches for the last place that a value can be inserted while preserving order (first place that is greater than the value)</td>
	</tr>
</table>

</div>
</div>
</body>
</html>
