<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>io:examples</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2008-10-14T15:42:04-0700" />
<meta name="keywords" content="io,examples" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/io/examples?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=io" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/io/examples" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/io/examples" />
<link rel="canonical" href="examples" />
<link rel="stylesheet" media="all" type="text/css" href="../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='io';var JSINFO = {"id":"io:examples","namespace":"io"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="c_io_examples" id="c_io_examples">C++ I/O Examples</a></h2>
<div class="level2">

<p>

Reading From Files
</p>

<p>
Assume that we have a file named data.txt that contains this text:
</p>
<pre class="c code c++" style="font-family:monospace;">    Fry<span class="sy0">:</span> One Jillion dollars.
    <span class="br0">&#91;</span>Everyone gasps.<span class="br0">&#93;</span>
    Auctioneer<span class="sy0">:</span> Sir<span class="sy0">,</span> that<span class="st0">'s not a number.
    [Everyone gasps.]</span></pre>
<p>

We could use this code to read data from the file, word by word:
</p>
<pre class="c code c++" style="font-family:monospace;">    ifstream fin<span class="br0">&#40;</span><span class="st0">&quot;data.txt&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw4">string</span> s<span class="sy0">;</span>
    <span class="kw1">while</span><span class="br0">&#40;</span> fin <span class="sy0">&gt;&gt;</span> s <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;Read from file: &quot;</span> <span class="sy0">&lt;&lt;</span> s <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
    <span class="br0">&#125;</span></pre>
<p>

When used in this manner, we&#039;ll get space-delimited bits of text from the file:
</p>
<pre class="c code c++" style="font-family:monospace;">    Read from file<span class="sy0">:</span> Fry<span class="sy0">:</span>
    Read from file<span class="sy0">:</span> One
    Read from file<span class="sy0">:</span> Jillion
    Read from file<span class="sy0">:</span> dollars.
    <span class="me1">Read</span> from file<span class="sy0">:</span> <span class="br0">&#91;</span>Everyone
    Read from file<span class="sy0">:</span> gasps.<span class="br0">&#93;</span>
    Read from file<span class="sy0">:</span> Auctioneer<span class="sy0">:</span>
    Read from file<span class="sy0">:</span> Sir<span class="sy0">,</span>
    Read from file<span class="sy0">:</span> that<span class="st0">'s
    Read from file: not
    Read from file: a
    Read from file: number.
    Read from file: [Everyone
    Read from file: gasps.]</span></pre>
<p>

Note that in the previous example, all of the whitespace that separated words
(including newlines) was lost. If we were interested in preserving whitespace,
we could read the file in line-by-line using the I/O_getline()_function.
</p>
<pre class="c code c++" style="font-family:monospace;">    ifstream fin<span class="br0">&#40;</span><span class="st0">&quot;data.txt&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw4">const</span> <span class="kw4">int</span> LINE_LENGTH <span class="sy0">=</span> <span class="nu0">100</span><span class="sy0">;</span>
    <span class="kw4">char</span> str<span class="br0">&#91;</span>LINE_LENGTH<span class="br0">&#93;</span><span class="sy0">;</span>
&nbsp;
    <span class="kw1">while</span><span class="br0">&#40;</span> fin.<span class="me1">getline</span><span class="br0">&#40;</span>str<span class="sy0">,</span>LINE_LENGTH<span class="br0">&#41;</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;Read from file: &quot;</span> <span class="sy0">&lt;&lt;</span> str <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
    <span class="br0">&#125;</span></pre>
<p>

Reading line-by-line produces the following output:
</p>
<pre class="c code c++" style="font-family:monospace;">    Read from file<span class="sy0">:</span> Fry<span class="sy0">:</span> One Jillion dollars.
    <span class="me1">Read</span> from file<span class="sy0">:</span> <span class="br0">&#91;</span>Everyone gasps.<span class="br0">&#93;</span>
    Read from file<span class="sy0">:</span> Auctioneer<span class="sy0">:</span> Sir<span class="sy0">,</span> that<span class="st0">'s not a number.
    Read from file: [Everyone gasps.]</span></pre>
<p>

If you want to avoid reading into character arrays, you can use the C++_string
getline() function to read lines into strings:
</p>
<pre class="c code c++" style="font-family:monospace;">    ifstream fin<span class="br0">&#40;</span><span class="st0">&quot;data.txt&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw4">string</span> s<span class="sy0">;</span>
    <span class="kw1">while</span><span class="br0">&#40;</span> getline<span class="br0">&#40;</span>fin<span class="sy0">,</span>s<span class="br0">&#41;</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;Read from file: &quot;</span> <span class="sy0">&lt;&lt;</span> s <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
    <span class="br0">&#125;</span></pre>
<p>
Checking For Errors
</p>

<p>
Simply evaluating an I/O object in a boolean context will return false if any
errors have occurred:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="kw4">string</span> filename <span class="sy0">=</span> <span class="st0">&quot;data.txt&quot;</span><span class="sy0">;</span>
    ifstream fin<span class="br0">&#40;</span> filename.<span class="me1">c_str</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw1">if</span><span class="br0">&#40;</span> <span class="sy0">!</span>fin <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;Error opening &quot;</span> <span class="sy0">&lt;&lt;</span> filename <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; for input&quot;</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
      exit<span class="br0">&#40;</span><span class="sy0">-</span>1<span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span></pre>
</div>
<!-- SECTION "C++ I/O Examples" [3-] --></div>
</body>
</html>
