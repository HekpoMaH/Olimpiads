<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="it"
 lang="it" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>it:stl:deque:deque_constructors</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-09-14T09:35:55-0700" />
<meta name="keywords" content="it,stl,deque,deque_constructors" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/it/stl/deque/deque_constructors?do=index" title="Indice" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=it:stl:deque" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/it/stl/deque/deque_constructors" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/it/stl/deque/deque_constructors" />
<link rel="canonical" href="deque_constructors" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='it:stl:deque';var JSINFO = {"id":"it:stl:deque:deque_constructors","namespace":"it:stl:deque"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="costruttori_di_deque_code_a_due_estremi" id="costruttori_di_deque_code_a_due_estremi">Costruttori di &#039;deque&#039; (Code a due estremi)</a></h2>
<div class="level2">

<p>
Sintassi:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;deque&gt;</span>
    deque<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    deque<span class="br0">&#40;</span> <span class="kw4">const</span> deque<span class="sy0">&amp;</span> c <span class="br0">&#41;</span><span class="sy0">;</span>
    deque<span class="br0">&#40;</span> size_type num<span class="sy0">,</span> <span class="kw4">const</span> TYPE<span class="sy0">&amp;</span> val <span class="sy0">=</span> TYPE<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
    deque<span class="br0">&#40;</span> input_iterator start<span class="sy0">,</span> input_iterator end <span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
Il costruttore di default di <em>deque</em> non vuole argomenti, semplicemente crea una
nuova istanza di quella deque
</p>

<p>
Il secondo costruttore è un default copy constructor che può essere usato per creare una nuova deque che
è una copia di una data deque <code>c</code>
</p>

<p>
Il terzo costruttore crea na deque con abbastanza spazio per <code>num</code> oggetti. Se <code>val</code> viene specificato
allora a ciascuno di quegli oggetti verrà dato quel valore. Per esempio il seguente codice crea una deque
che consiste di cinque copiè dell&#039;intero 42:
</p>
<pre class="c code c++" style="font-family:monospace;">   deque<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> dq<span class="br0">&#40;</span> 5<span class="sy0">,</span> 42 <span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
L&#039;ultimo costruttore crea una deque inizializzata per contenere gli elementi tra <code>start</code> e <code>end</code>. 
Per esempio:
</p>
<pre class="c code c++" style="font-family:monospace;">   <span class="co1">// create a deque of random integers</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;original deque: &quot;</span><span class="sy0">;</span>
   deque<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> dq<span class="sy0">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">10</span><span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw4">int</span> num <span class="sy0">=</span> static_cast<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span><span class="br0">&#40;</span>rand<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">%</span> 10<span class="br0">&#41;</span><span class="sy0">;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> num <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy0">;</span>
     dq.<span class="me1">push_back</span><span class="br0">&#40;</span> num <span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
&nbsp;
   <span class="co1">// find the first element of dq that is even</span>
   deque<span class="sy0">&lt;</span>int<span class="sy0">&gt;::</span><span class="me2">iterator</span> iter1 <span class="sy0">=</span> dq.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw1">while</span><span class="br0">&#40;</span> iter1 <span class="sy0">!=</span> dq.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&amp;&amp;</span> <span class="sy0">*</span>iter1 <span class="sy0">%</span> 2 <span class="sy0">!=</span> 0 <span class="br0">&#41;</span> <span class="sy0">++</span>iter1<span class="sy0">;</span>
&nbsp;
   <span class="co1">// find the last element of dq that is even</span>
   deque<span class="sy0">&lt;</span>int<span class="sy0">&gt;::</span><span class="me2">iterator</span> iter2 <span class="sy0">=</span> dq.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw1">do</span> <span class="br0">&#123;</span>
     <span class="sy0">--</span>iter2<span class="sy0">;</span>
   <span class="br0">&#125;</span> <span class="kw1">while</span><span class="br0">&#40;</span> iter2 <span class="sy0">!=</span> dq.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&amp;&amp;</span> <span class="sy0">*</span>iter2 <span class="sy0">%</span> 2 <span class="sy0">!=</span> 0 <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;first even number: &quot;</span> <span class="sy0">&lt;&lt;</span> <span class="sy0">*</span>iter1 <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;, last even number: &quot;</span> <span class="sy0">&lt;&lt;</span> <span class="sy0">*</span>iter2 <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
&nbsp;
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;new deque: &quot;</span><span class="sy0">;</span>
   deque<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> dq2<span class="br0">&#40;</span> iter1<span class="sy0">,</span> iter2 <span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> size_t i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> dq2.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> dq2<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span></pre>
<p>
Una volta lanciato il codice produce il seguente output
</p>
<pre class="code">
   original deque: 1 9 7 9 2 7 2 1 9 8
   first even number: 2, last even number: 8
   new deque: 2 7 2 1 9</pre>
<p>
Oltre a contenitori e iteratori la STL funziona con puntatori e array. Per esempio, il codice seguente crea una deque usando dati presi da un array e l&#039;aritmetica dei puntatori:
</p>
<pre class="c code c++" style="font-family:monospace;">  <span class="co1">// create a deque from an array of integers</span>
  <span class="kw4">const</span> <span class="kw4">int</span> ARR_SIZE <span class="sy0">=</span> <span class="nu0">4</span><span class="sy0">;</span>
  <span class="kw4">int</span> vals<span class="br0">&#91;</span>ARR_SIZE<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#123;</span> 13<span class="sy0">,</span> 26<span class="sy0">,</span> 5<span class="sy0">,</span> 979 <span class="br0">&#125;</span><span class="sy0">;</span>
  deque<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> dq<span class="br0">&#40;</span> vals<span class="sy0">,</span> vals <span class="sy0">+</span> <span class="kw4">sizeof</span><span class="br0">&#40;</span>vals<span class="br0">&#41;</span><span class="sy0">/</span><span class="kw4">sizeof</span><span class="br0">&#40;</span><span class="kw4">int</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
  <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;dq is: &quot;</span><span class="sy0">;</span>
  <span class="kw1">for</span><span class="br0">&#40;</span> size_t i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> dq.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="sy0">++</span>i <span class="br0">&#41;</span> <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> dq<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy0">;</span>
  <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">'<span class="es1">\n</span>'</span><span class="sy0">;</span></pre>
<p>
Tutti questi costruttori girano in <a href="../../complexity" class="wikilink1" title="it:complexity">tempo lineare</a> tranne il primo che gira in <a href="../../complexity" class="wikilink1" title="it:complexity">tempo costante</a>.
</p>

</div>
</div>
</body>
</html>
