<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="jp"
 lang="jp" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>jp:c:other:signal</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-12-11T14:32:47-0800" />
<meta name="keywords" content="jp,c,other,signal" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/jp/c/other/signal?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=jp:c:other" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/jp/c/other/signal" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/jp/c/other/signal" />
<link rel="canonical" href="signal" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='jp:c:other';var JSINFO = {"id":"jp:c:other:signal","namespace":"jp:c:other"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="signal" id="signal">signal</a></h2>
<div class="level2">

<p>

文法:

</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;csignal&gt;</span>
    <span class="kw4">void</span> <span class="br0">&#40;</span> <span class="sy0">*</span>signal<span class="br0">&#40;</span> <span class="kw4">int</span> シグナル<span class="sy0">,</span> <span class="kw4">void</span> <span class="br0">&#40;</span><span class="sy0">*</span> 関数<span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw4">int</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span> <span class="br0">&#40;</span><span class="kw4">int</span><span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
signal()関数は、作成しているプログラムが、引数で指定された<code>シグナル</code>を受信した場合に呼び出される関数を設定します。<code>関数</code>引数はカスタムのシグナルハンドラを渡すこともできますし、下記の表でマクロとして定義されているハンドラを利用することもできます。これらのマクロはcsignalヘッダで定義されています。

</p>
<table class="inline">
	<tr class="row0">
		<th class="col0">マクロ</th><th class="col1">説明</th>
	</tr>
	<tr class="row1">
		<td class="col0">SIG_DFL</td><td class="col1">デフォルトのシグナルハンドラ</td>
	</tr>
	<tr class="row2">
		<td class="col0">SIG_IGN</td><td class="col1">シグナルを無視します</td>
	</tr>
</table>

<p>

シグナルハンドラを設定できる基本的なシグナルは以下の通りです:

</p>
<table class="inline">
	<tr class="row0">
		<th class="col0">シグナル</th><th class="col1">説明</th>
	</tr>
	<tr class="row1">
		<td class="col0">SIGTERM</td><td class="col1">一般的なキャッチ可能な停止シグナルです</td>
	</tr>
	<tr class="row2">
		<td class="col0">SIGINT</td><td class="col1">プログラムへの割り込みです。通常はCtrl-Cで発行されます</td>
	</tr>
	<tr class="row3">
		<td class="col0">SIGQUIT</td><td class="col1">SIGINTと似た、プログラムへの割り込みです</td>
	</tr>
	<tr class="row4">
		<td class="col0">SIGKILL</td><td class="col1">プログラム停止です。キャッチできません</td>
	</tr>
	<tr class="row5">
		<td class="col0">SIGHUP</td><td class="col1">ターミナルとの接続が切れる場合に通知されます</td>
	</tr>
</table>

<p>

signal()返り値は、以前定義されていたシグナルハンドラへのポインタです。エラーの発生時はSIG_ERRが返されます。
</p>

<p>
以下のサンプルは、signal()関数を使用して、ユーザがプログラムを停止したときに任意の数の関数を呼び出します。関数はベクタに保存され、プログラムの終了時に、一つの”clean-up”関数から、すべての関数が呼ばれます:
</p>
<pre class="c code c++" style="font-family:monospace;">  <span class="kw4">void</span> f1<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;f1()が呼ばれています...&quot;</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
  <span class="br0">&#125;</span>
&nbsp;
  <span class="kw4">void</span> f2<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;f2()が呼ばれています...&quot;</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
  <span class="br0">&#125;</span>
&nbsp;
  <span class="kw4">typedef</span> <span class="kw4">void</span><span class="br0">&#40;</span><span class="sy0">*</span>endFunc<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span><span class="sy0">;</span>
  vector<span class="sy0">&lt;</span>endFunc<span class="sy0">&gt;</span> endFuncs<span class="sy0">;</span>
&nbsp;
  <span class="kw4">void</span> cleanUp<span class="br0">&#40;</span> <span class="kw4">int</span> dummy <span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">unsigned</span> <span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> endFuncs.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
      endFunc f <span class="sy0">=</span> endFuncs.<span class="me1">at</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="sy0">;</span>
      <span class="br0">&#40;</span><span class="sy0">*</span>f<span class="br0">&#41;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span>
    exit<span class="br0">&#40;</span><span class="sy0">-</span>1<span class="br0">&#41;</span><span class="sy0">;</span>
  <span class="br0">&#125;</span>
&nbsp;
  <span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
    <span class="co1">// さまざまなシグナルに対して、clean-up関数を設定しています</span>
    signal<span class="br0">&#40;</span> SIGTERM<span class="sy0">,</span> cleanUp <span class="br0">&#41;</span><span class="sy0">;</span>
    signal<span class="br0">&#40;</span> SIGINT<span class="sy0">,</span> cleanUp <span class="br0">&#41;</span><span class="sy0">;</span>
    signal<span class="br0">&#40;</span> SIGQUIT<span class="sy0">,</span> cleanUp <span class="br0">&#41;</span><span class="sy0">;</span>
    signal<span class="br0">&#40;</span> SIGHUP<span class="sy0">,</span> cleanUp <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="co1">// 二つの関数をハンドラから呼ばれるリストに追加します</span>
    endFuncs.<span class="me1">push_back</span><span class="br0">&#40;</span> f1 <span class="br0">&#41;</span><span class="sy0">;</span>
    endFuncs.<span class="me1">push_back</span><span class="br0">&#40;</span> f2 <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="co1">// ユーザが停止するまでループします</span>
    <span class="kw1">while</span><span class="br0">&#40;</span> 1 <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="kw1">return</span> <span class="nu0">0</span><span class="sy0">;</span>
  <span class="br0">&#125;</span></pre>
<p>
関連トピック: <a href="raise" class="wikilink1" title="jp:c:other:raise">raise</a>
</p>

</div>
</div>
</body>
</html>
