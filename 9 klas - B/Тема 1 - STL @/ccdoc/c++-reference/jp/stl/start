<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="jp"
 lang="jp" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>jp:stl:start</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-11-27T15:41:34-0800" />
<meta name="keywords" content="jp,stl,start" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/jp/stl/start?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=jp:stl" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/jp/stl/start" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/jp/stl/start" />
<link rel="canonical" href="start" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='jp:stl';var JSINFO = {"id":"jp:stl:start","namespace":"jp:stl"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">
<!-- TOC START -->
<div class="toc">
<div class="tocheader toctoggle" id="toc__header">Table of Contents</div>
<div id="toc__inside">

<ul class="toc">
<li class="clear">

<ul class="toc">
<li class="level2"><div class="li"><span class="li"><a href="start#c_標準テンプレートライブラリ" class="toc">C++ 標準テンプレートライブラリ</a></span></div>
<ul class="toc">
<li class="level3"><div class="li"><span class="li"><a href="start#stl_コンテナ" class="toc">STL コンテナ</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="start#アルゴリズム" class="toc">アルゴリズム</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="start#イテレータ" class="toc">イテレータ</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="start#関数オブジェクト" class="toc">関数オブジェクト</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="start#メモリ" class="toc">メモリ</a></span></div></li>
<li class="level3"><div class="li"><span class="li"><a href="start#ユーティリティ" class="toc">ユーティリティ</a></span></div></li></ul>
</li></ul>
</li></ul>
</div>
</div>
<!-- TOC END -->



<h2><a name="c_標準テンプレートライブラリ" id="c_標準テンプレートライブラリ">C++ 標準テンプレートライブラリ</a></h2>
<div class="level2">

<p>

C++ STL (標準テンプレートライブラリ)はクラステンプレートとアルゴリズムの標準コレクションであり、プログラマが容易にキュー、リスト、スタックというような標準的なデータ構造を実装することを可能にします。
</p>

</div>
<!-- SECTION "C++ 標準テンプレートライブラリ" [1-349] -->
<h3><a name="stl_コンテナ" id="stl_コンテナ">STL コンテナ</a></h3>
<div class="level3">

<p>

C++ STLでは２種類のコンテナを提供します：

</p>
<ul>
<li class="level1"><div class="li"> シーケンスコンテナ</div>
<ul>
<li class="level2"><div class="li"> <a href="vector/start" class="wikilink1" title="jp:stl:vector:start">C++ ベクタ</a></div>
</li>
<li class="level2"><div class="li"> <a href="http://www.cppreference.com/wiki/jp/stl/list/start" class="wikilink2" title="jp:stl:list:start" rel="nofollow">C++ リスト</a></div>
</li>
<li class="level2"><div class="li"> <a href="deque/start" class="wikilink1" title="jp:stl:deque:start">C++ 両端キュー</a></div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> 連想コンテナ</div>
<ul>
<li class="level2"><div class="li"> <a href="map/start" class="wikilink1" title="jp:stl:map:start">C++ マップ</a></div>
</li>
<li class="level2"><div class="li"> <a href="multimap/start" class="wikilink1" title="jp:stl:multimap:start">C++ マルチマップ</a></div>
</li>
<li class="level2"><div class="li"> <a href="http://www.cppreference.com/wiki/jp/stl/set/start" class="wikilink2" title="jp:stl:set:start" rel="nofollow">C++ セット</a></div>
</li>
<li class="level2"><div class="li"> <a href="http://www.cppreference.com/wiki/jp/stl/multiset/start" class="wikilink2" title="jp:stl:multiset:start" rel="nofollow">C++ マルチセット</a></div>
</li>
</ul>
</li>
</ul>

<p>

<br/>

さらにC++標準ライブラリではいくつかのSTLではないコンテナを提供しています。それらはコンテナの様に捉えることもできますか、STLコンテナのすべての要件を満たしているわけではありません。 

</p>
<ul>
<li class="level1"><div class="li"> コンテナアダプタ</div>
<ul>
<li class="level2"><div class="li"> <a href="stack/start" class="wikilink1" title="jp:stl:stack:start">C++ スタック</a></div>
</li>
<li class="level2"><div class="li"> <a href="queue/start" class="wikilink1" title="jp:stl:queue:start">C++ キュー</a></div>
</li>
<li class="level2"><div class="li"> <a href="priority_queue/start" class="wikilink1" title="jp:stl:priority_queue:start">C++ 優先順位付きキュー</a></div>
</li>
</ul>
</li>
<li class="level1"><div class="li"> その他</div>
<ul>
<li class="level2"><div class="li"> <a href="bitset/start" class="wikilink1" title="jp:stl:bitset:start">C++ ビットセット</a></div>
</li>
<li class="level2"><div class="li"> <a href="http://www.cppreference.com/wiki/jp/valarray/start" class="wikilink2" title="jp:valarray:start" rel="nofollow">C++ 値配列</a></div>
</li>
</ul>
</li>
</ul>

<p>

<br/>

C++ STLの背景にある思想は、複雑なデータ構造を使う際の難しい部分は既に実装済みであるという点です。 
もしプログラマが整数のスタックを使いたければ、次のコードを書くだけでよいのです。
</p>
<pre class="c code c++" style="font-family:monospace;">  stack<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> myStack<span class="sy0">;</span></pre>
<p>
最小限の努力で、このスタックに対して整数を<a href="http://www.cppreference.com/wiki/jp/stl/stack/push" class="wikilink2" title="jp:stl:stack:push" rel="nofollow">push</a>や<a href="http://www.cppreference.com/wiki/jp/stl/stack/pop" class="wikilink2" title="jp:stl:stack:pop" rel="nofollow">pop</a>できるのです。
C++テンプレートの魔法によって、整数だけでなくすべてのデータ型を使うことができます。
STLスタッククラスによってスタック内のデータに関係なく、一般的なスタックの機能を利用することができます。
</p>

</div>
<!-- SECTION "STL コンテナ" [350-2043] -->
<h3><a name="アルゴリズム" id="アルゴリズム">アルゴリズム</a></h3>
<div class="level3">

<p>

上記に加え、STLでは多くの便利な<a href="algorithm/start" class="wikilink1" title="jp:stl:algorithm:start">アルゴリズム</a>も提供しています。–例えば
<a href="http://www.cppreference.com/wiki/jp/stl/algorithm/binary_search" class="wikilink2" title="jp:stl:algorithm:binary_search" rel="nofollow">binary_search</a>、<a href="http://www.cppreference.com/wiki/jp/stl/algorithm/sort" class="wikilink2" title="jp:stl:algorithm:sort" rel="nofollow">sort</a>、<a href="http://www.cppreference.com/wiki/jp/stl/algorithm/for_each" class="wikilink2" title="jp:stl:algorithm:for_each" rel="nofollow">for_each</a>などがあり、
これらは様々なコンテナやデータ構造において使うことができます。
</p>

</div>
<!-- SECTION "アルゴリズム" [2044-2403] -->
<h3><a name="イテレータ" id="イテレータ">イテレータ</a></h3>
<div class="level3">

<p>

<a href="iterators" class="wikilink1" title="jp:stl:iterators">C++ イテレータ</a> STLコンテナや他のデータ構造に対してイテレーションを可能にします。
</p>

</div>
<!-- SECTION "イテレータ" [2404-2547] -->
<h3><a name="関数オブジェクト" id="関数オブジェクト">関数オブジェクト</a></h3>
<div class="level3">

<p>

<a href="functional/start" class="wikilink1" title="jp:stl:functional:start">&lt;functional&gt; ヘッダファイル</a>では関数オブジェクトや関数アダプタを定義しています。
</p>

</div>
<!-- SECTION "関数オブジェクト" [2548-2718] -->
<h3><a name="メモリ" id="メモリ">メモリ</a></h3>
<div class="level3">

<p>

<a href="memory/start" class="wikilink1" title="jp:stl:memory:start">&lt;memory&gt; ヘッダファイル</a>では<a href="memory/auto_ptr" class="wikilink1" title="jp:stl:memory:auto_ptr">auto_ptr</a>のような簡素なメモリ管理構造を提供しています。
</p>

</div>
<!-- SECTION "メモリ" [2719-2889] -->
<h3><a name="ユーティリティ" id="ユーティリティ">ユーティリティ</a></h3>
<div class="level3">

<p>

<a href="utility/start" class="wikilink1" title="jp:stl:utility:start">&lt;utility&gt; ヘッダファイル</a>内の<a href="utility/make_pair" class="wikilink1" title="jp:stl:utility:make_pair">make_pair</a>のような一般的なユーティリティメソッドもいくつかあります。 

</p>

</div>
<!-- SECTION "ユーティリティ" [2890-] --></div>
</body>
</html>
