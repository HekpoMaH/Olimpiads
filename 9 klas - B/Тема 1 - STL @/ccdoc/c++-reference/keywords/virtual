<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>keywords:virtual</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-11-09T09:09:05-0800" />
<meta name="keywords" content="keywords,virtual" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/keywords/virtual?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=keywords" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/keywords/virtual" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/keywords/virtual" />
<link rel="canonical" href="virtual" />
<link rel="stylesheet" media="all" type="text/css" href="../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='keywords';var JSINFO = {"id":"keywords:virtual","namespace":"keywords"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="virtual" id="virtual">virtual</a></h2>
<div class="level2">

<p>
Syntax:
</p>
<pre class="c code c++" style="font-family:monospace;">    virtual return<span class="sy0">-</span>type name<span class="br0">&#40;</span> parameter<span class="sy0">-</span>list <span class="br0">&#41;</span><span class="sy0">;</span>
    virtual return<span class="sy0">-</span>type name<span class="br0">&#40;</span> parameter<span class="sy0">-</span>list <span class="br0">&#41;</span> <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span></pre>
<p>
The virtual keyword can be used to create virtual functions, which can be
overridden by derived classes.

</p>
<ul>
<li class="level1"><div class="li"> A virtual function indicates that a function can be overridden in a subclass, and that the overridden function will actually be used.</div>
</li>
<li class="level1"><div class="li"> When a base object pointer points to a derived object that contains a virtual function, the decision about which version of that function to call is based on the type of object pointed to by the pointer, and this process happens at runtime.</div>
</li>
<li class="level1"><div class="li"> A base object can point to different derived objects and have different versions of the virtual function run.</div>
</li>
</ul>

<p>

If the function is specified as a pure virtual function (denoted by the = 0), it must be overridden by a derived class.
</p>

<p>
For example, the following code snippet shows how a child class can override a
virtual method of its parent, and how a non-virtual method in the parent cannot
be overridden:
</p>
<pre class="c code c++" style="font-family:monospace;">  class Base <span class="br0">&#123;</span>
  public<span class="sy0">:</span>
   <span class="kw4">void</span> nonVirtualFunc<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;Base: non-virtual function&quot;</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
   <span class="br0">&#125;</span>
   virtual <span class="kw4">void</span> virtualFunc<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;Base: virtual function&quot;</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
   <span class="br0">&#125;</span>
  <span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
  class Child <span class="sy0">:</span> public Base <span class="br0">&#123;</span>
  public<span class="sy0">:</span>
   <span class="kw4">void</span> nonVirtualFunc<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;Child: non-virtual function&quot;</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
   <span class="br0">&#125;</span>
   <span class="kw4">void</span> virtualFunc<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;Child: virtual function&quot;</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
   <span class="br0">&#125;</span>
  <span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
  <span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
   Base<span class="sy0">*</span> basePointer <span class="sy0">=</span> new Child<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   basePointer<span class="sy0">-&gt;</span>nonVirtualFunc<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   basePointer<span class="sy0">-&gt;</span>virtualFunc<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="kw1">return</span> <span class="nu0">0</span><span class="sy0">;</span>
  <span class="br0">&#125;</span></pre>
<p>
When run, the following code displays:
</p>
<pre class="code">
  Base: non-virtual function
  Child: virtual function</pre>
<p>
Related Topics: <a href="class" class="wikilink1" title="keywords:class">class</a>
</p>

</div>
<!-- SECTION "virtual" [3-] --></div>
</body>
</html>
