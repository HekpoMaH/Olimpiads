<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru"
 lang="ru" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ru:stl:list:erase</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-08-05T22:51:31-0700" />
<meta name="keywords" content="ru,stl,list,erase" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/ru/stl/list/erase?do=index" title="Все страницы" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=ru:stl:list" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/ru/stl/list/erase" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/ru/stl/list/erase" />
<link rel="canonical" href="erase" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='ru:stl:list';var JSINFO = {"id":"ru:stl:list:erase","namespace":"ru:stl:list"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="erase" id="erase">erase</a></h2>
<div class="level2">

<p>
Синтаксис:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;list&gt;</span>
    iterator erase<span class="br0">&#40;</span> iterator loc <span class="br0">&#41;</span><span class="sy0">;</span>
    iterator erase<span class="br0">&#40;</span> iterator start<span class="sy0">,</span> iterator end <span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
Функция erase() либо удаляет элемент под итератором loc, либо удаляет элементы
между start и end (включая start, но не включая end). Возвращаемое значение -
итератор на элемент после последнего удаленного элемента.
</p>

<p>
Первая версия erase (удаляющая один элемент) выполняется за
<a href="http://www.cppreference.com/wiki/ru/complexity" class="wikilink2" title="ru:complexity" rel="nofollow">константное время</a>. Многоэлементная версия erase всегда требует
<a href="http://www.cppreference.com/wiki/ru/complexity" class="wikilink2" title="ru:complexity" rel="nofollow">линейное время</a>.
</p>

<p>
Важное свойство списков состоит в том, что при вставке элементов итераторы не становятся недействительными, даже при удалении недействительным становится только итератор на удаленный элемент.
</p>

<p>
Порядок итераторов может измениться (то есть после операции со списком у list&lt;T&gt;::iterator&#039;а может появится другой предшествующий или последующий элемент), но сами итераторы не станут недействительными или указывающими на другой элемент (если только эта недействительность или изменение будет явным).
</p>

<p>

Например:
</p>
<pre class="c code c++" style="font-family:monospace;">   <span class="co1">// Создаем список, заполняем его первыми десятью буквами алфавита</span>
   list<span class="sy0">&lt;</span>char<span class="sy0">&gt;</span> alphaList<span class="sy0">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">10</span><span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     alphaList.<span class="me1">push_back</span><span class="br0">&#40;</span> i <span class="sy0">+</span> 65 <span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   <span class="kw4">int</span> size <span class="sy0">=</span> alphaList.<span class="me1">size</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   list<span class="sy0">&lt;</span>char<span class="sy0">&gt;::</span><span class="me2">iterator</span> startIterator<span class="sy0">;</span>
   list<span class="sy0">&lt;</span>char<span class="sy0">&gt;::</span><span class="me2">iterator</span> tempIterator<span class="sy0">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> size<span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     startIterator <span class="sy0">=</span> alphaList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
     alphaList.<span class="me1">erase</span><span class="br0">&#40;</span> startIterator <span class="br0">&#41;</span><span class="sy0">;</span>
     <span class="co1">// Выводим на экран</span>
     copy<span class="br0">&#40;</span> alphaList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> alphaList.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> ostream_iterator<span class="sy0">&lt;</span>char<span class="sy0">&gt;</span><span class="br0">&#40;</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
   <span class="br0">&#125;</span></pre>
<p>
Код выведет:
</p>
<pre class="code">
   BCDEFGHIJ
   CDEFGHIJ
   DEFGHIJ
   EFGHIJ
   FGHIJ
   GHIJ
   HIJ
   IJ
   J</pre>
<p>
В следующем примере erase() вызывается с двумя итераторами в качестве
параметров, чтобы удалить несколько элементов из списка:
</p>
<pre class="c code c++" style="font-family:monospace;">   <span class="co1">// Создаем вектор, заполняем его первыми десятью буквами алфавита</span>
   list<span class="sy0">&lt;</span>char<span class="sy0">&gt;</span> alphaList<span class="sy0">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">10</span><span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     alphaList.<span class="me1">push_back</span><span class="br0">&#40;</span> i <span class="sy0">+</span> 65 <span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   <span class="co1">// Выводим полный список</span>
   copy<span class="br0">&#40;</span> alphaList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> alphaList.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> ostream_iterator<span class="sy0">&lt;</span>char<span class="sy0">&gt;</span><span class="br0">&#40;</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
&nbsp;
    <span class="co1">// Используем erase, чтобы удалить все элементы списка, кроме первых двух</span>
    <span class="co1">//  и последних трех</span>
   alphaList.<span class="me1">erase</span><span class="br0">&#40;</span> advance<span class="br0">&#40;</span>alphaList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span>2<span class="br0">&#41;</span><span class="sy0">,</span> advance<span class="br0">&#40;</span>alphaList.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,-</span>3<span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
   <span class="co1">// Выводим измененный список</span>
   copy<span class="br0">&#40;</span> alphaList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> alphaList.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> ostream_iterator<span class="sy0">&lt;</span>char<span class="sy0">&gt;</span><span class="br0">&#40;</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span></pre>
<p>
После запуска код выведет:
</p>
<pre class="code">
   ABCDEFGHIJ
   ABHIJ</pre>
<p>

Смотри также: <a href="clear" class="wikilink1" title="ru:stl:list:clear">clear</a>, <a href="insert" class="wikilink1" title="ru:stl:list:insert">insert</a>, <a href="pop_back" class="wikilink1" title="ru:stl:list:pop_back">pop_back</a>, <a href="pop_front" class="wikilink1" title="ru:stl:list:pop_front">pop_front</a>, <a href="remove" class="wikilink1" title="ru:stl:list:remove">remove</a>, <a href="remove_if" class="wikilink1" title="ru:stl:list:remove_if">remove_if</a>
</p>

</div>
<!-- SECTION "erase" [3-] --></div>
</body>
</html>
