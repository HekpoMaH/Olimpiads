<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru"
 lang="ru" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ru:stl:list:sort</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-08-02T22:24:08-0700" />
<meta name="keywords" content="ru,stl,list,sort" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/ru/stl/list/sort?do=index" title="Все страницы" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=ru:stl:list" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/ru/stl/list/sort" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/ru/stl/list/sort" />
<link rel="canonical" href="sort" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='ru:stl:list';var JSINFO = {"id":"ru:stl:list:sort","namespace":"ru:stl:list"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="sort" id="sort">sort</a></h2>
<div class="level2">

<p>
Синтаксис:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;list&gt;</span>
    <span class="kw4">void</span> sort<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw4">void</span> sort<span class="br0">&#40;</span> BinPred p <span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
Функция sort() используется для сортировки списка по возрастанию. Сравнение происходит с помощью
оператора &lt;, если же предоставлена функция p, то она используется для определения, того, что
один элемент меньше другого.
</p>

<p>
Сортировка выполняется за N log N.
</p>

<p>
Смотри также: <a href="reverse" class="wikilink1" title="ru:stl:list:reverse">reverse</a>
</p>
<pre class="c code c++" style="font-family:monospace;">Простой пример<span class="sy0">:</span>
&nbsp;
<span class="co2">#include &lt;iostream&gt;</span>
<span class="co2">#include &lt;list&gt;</span>
using namespace std<span class="sy0">;</span>
&nbsp;
  <span class="co1">// Предположим, что  TYPE t; cout &lt;&lt; t;  правомерно.</span>
template<span class="sy0">&lt;</span>class TYPE<span class="sy0">&gt;</span>
<span class="kw2">inline</span> ostream <span class="sy0">&amp;</span> operator<span class="sy0">&lt;&lt;</span> <span class="br0">&#40;</span> ostream <span class="sy0">&amp;</span> theOstream<span class="sy0">,</span>
                              <span class="kw4">const</span> list<span class="sy0">&lt;</span>TYPE<span class="sy0">&gt;</span> <span class="sy0">&amp;</span> theList <span class="br0">&#41;</span>
<span class="br0">&#123;</span>
  typename list<span class="sy0">&lt;</span>TYPE<span class="sy0">&gt;::</span><span class="me2">const_iterator</span> listIterator <span class="sy0">=</span> theList.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
  <span class="kw1">for</span> <span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>   listIterator <span class="sy0">!=</span> theList.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>  listIterator <span class="sy0">++,</span> i <span class="sy0">++</span> <span class="br0">&#41;</span>
    theOstream <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;    [&quot;</span> <span class="sy0">&lt;&lt;</span> i <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;]:   <span class="es1">\&quot;</span>&quot;</span> <span class="sy0">&lt;&lt;</span> <span class="br0">&#40;</span><span class="sy0">*</span>listIterator<span class="br0">&#41;</span> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;<span class="es1">\&quot;</span>&quot;</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
  <span class="kw1">return</span> theOstream<span class="sy0">;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw4">struct</span> Functor
<span class="br0">&#123;</span>
  bool operator<span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#40;</span> <span class="kw4">const</span> <span class="kw4">char</span> <span class="sy0">*</span> a<span class="sy0">,</span> <span class="kw4">const</span> <span class="kw4">char</span> <span class="sy0">*</span> b <span class="br0">&#41;</span>
    <span class="br0">&#123;</span> <span class="kw1">return</span> strcmp<span class="br0">&#40;</span>a<span class="sy0">,</span>b<span class="br0">&#41;</span> <span class="sy0">&lt;</span> <span class="nu0">0</span><span class="sy0">;</span> <span class="br0">&#125;</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
<span class="kw4">int</span>
main<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
  list<span class="sy0">&lt;</span>char<span class="sy0">*&gt;</span>  l<span class="sy0">;</span>
&nbsp;
    <span class="coMULTI">/* Загрузка каких-то тестовых данных... */</span>
  <span class="kw4">char</span>  s<span class="br0">&#91;</span>3<span class="br0">&#93;</span><span class="sy0">;</span>
  s<span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="st0">'<span class="es5">\0</span>'</span><span class="sy0">;</span>
  <span class="kw1">for</span> <span class="br0">&#40;</span>   s<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">=</span><span class="st0">'c'</span><span class="sy0">;</span> s<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy0">&gt;=</span><span class="st0">'a'</span><span class="sy0">;</span> s<span class="br0">&#91;</span>0<span class="br0">&#93;</span><span class="sy0">--</span> <span class="br0">&#41;</span>
    <span class="kw1">for</span> <span class="br0">&#40;</span> s<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">=</span><span class="st0">'c'</span><span class="sy0">;</span> s<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy0">&gt;=</span><span class="st0">'a'</span><span class="sy0">;</span> s<span class="br0">&#91;</span>1<span class="br0">&#93;</span><span class="sy0">--</span>  <span class="br0">&#41;</span>
      l.<span class="me1">push_back</span><span class="br0">&#40;</span>strdup<span class="br0">&#40;</span>s<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="coMULTI">/* Покажи нам тестовые данные... */</span>
  <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> l <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
&nbsp;
    <span class="coMULTI">/* Сортировка списка. */</span>
  Functor f<span class="sy0">;</span>
  l.<span class="me1">sort</span><span class="br0">&#40;</span>f<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="coMULTI">/* Покажи нам, что получилось... */</span>
  <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> l <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
<span class="br0">&#125;</span></pre>
</div>
</div>
</body>
</html>
