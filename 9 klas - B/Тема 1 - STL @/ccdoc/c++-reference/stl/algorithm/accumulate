<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>stl:algorithm:accumulate</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-12-31T11:30:52-0800" />
<meta name="keywords" content="stl,algorithm,accumulate" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/stl/algorithm/accumulate?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=stl:algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/stl/algorithm/accumulate" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/stl/algorithm/accumulate" />
<link rel="canonical" href="accumulate" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='stl:algorithm';var JSINFO = {"id":"stl:algorithm:accumulate","namespace":"stl:algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="accumulate" id="accumulate">accumulate</a></h2>
<div class="level2">

<p>
Syntax:
</p>
<pre class="c code c++" style="font-family:monospace;"><span class="co2">#include &lt;numeric&gt;</span>
TYPE accumulate<span class="br0">&#40;</span> input_iterator start<span class="sy0">,</span> input_iterator end<span class="sy0">,</span> TYPE val <span class="br0">&#41;</span><span class="sy0">;</span>
TYPE accumulate<span class="br0">&#40;</span> input_iterator start<span class="sy0">,</span> input_iterator end<span class="sy0">,</span> TYPE val<span class="sy0">,</span> BinaryFunction f <span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
The <code>accumulate</code> function computes the sum of <code>val</code> and all of the elements in
the range [<code>start</code>,<code>end</code>).
</p>

<p>
If the binary function <code>f</code> if specified, it is used instead of the <code>+ operator</code> to
perform the summation.
</p>

<p>
The <code>accumulate</code> function runs in <a href="../../complexity" class="wikilink1" title="complexity">linear time</a>.
</p>

<p>
For example, the following code uses <code>accumulate</code> to sum the integers in a <a href="../vector/start" class="wikilink1" title="stl:vector:start">vector</a>:
</p>
<pre class="c code c++" style="font-family:monospace;"><span class="co2">#include &lt;iostream&gt;</span>
using std<span class="sy0">::</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a><span class="sy0">;</span>
<span class="co2">#include &lt;vector&gt;</span>
using std<span class="sy0">::</span><span class="me2">vector</span><span class="sy0">;</span>
<span class="co2">#include &lt;numeric&gt;</span>
using std<span class="sy0">::</span><span class="me2">accumulate</span><span class="sy0">;</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
  vector<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> v<span class="sy0">;</span>
  <span class="kw4">const</span> <span class="kw4">int</span> START <span class="sy0">=</span> 1<span class="sy0">,</span> END <span class="sy0">=</span> <span class="nu0">10</span><span class="sy0">;</span>
  <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="sy0">=</span> START<span class="sy0">;</span> i <span class="sy0">&lt;=</span> END<span class="sy0">;</span> <span class="sy0">++</span>i <span class="br0">&#41;</span> v.<span class="me1">push_back</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
  <span class="kw4">int</span> sum <span class="sy0">=</span> accumulate<span class="br0">&#40;</span> v.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> v.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> 0 <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
  <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;sum from &quot;</span> <span class="sy0">&lt;&lt;</span> START <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; to &quot;</span> <span class="sy0">&lt;&lt;</span> END <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; is &quot;</span> <span class="sy0">&lt;&lt;</span> sum <span class="sy0">&lt;&lt;</span> <span class="st0">'<span class="es1">\n</span>'</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre>
<p>
The <code>accumulate</code> function can also be used on non-numerical types.  The following
example uses <code>accumulate</code> to concatenate all of the <a href="../../string/start" class="wikilink1" title="string:start">strings</a> in a 
<a href="../vector/start" class="wikilink1" title="stl:vector:start">vector</a> into a single string:
</p>
<pre class="c code c++" style="font-family:monospace;"><span class="kw4">int</span> main <span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="kw4">string</span> str <span class="sy0">=</span> <span class="st0">&quot;Hello World!&quot;</span><span class="sy0">;</span>
    vector<span class="sy0">&lt;</span>string<span class="sy0">&gt;</span> vec<span class="br0">&#40;</span>10<span class="sy0">,</span>str<span class="br0">&#41;</span><span class="sy0">;</span>   <span class="co1">// vec = [&quot;Hello World!&quot;, &quot;Hello World!&quot;, ...]</span>
    <span class="kw4">string</span> a <span class="sy0">=</span> accumulate<span class="br0">&#40;</span> vec.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> vec.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> <span class="kw4">string</span><span class="br0">&#40;</span><span class="st0">&quot;&quot;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
    <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> a <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>            <span class="co1">// displays &quot;Hello World!Hello World!Hello...&quot;</span>
<span class="br0">&#125;</span></pre>
<p>
Related Topics: <a href="adjacent_difference" class="wikilink1" title="stl:algorithm:adjacent_difference">adjacent_difference</a>, <a href="count" class="wikilink1" title="stl:algorithm:count">count</a>, <a href="inner_product" class="wikilink1" title="stl:algorithm:inner_product">inner_product</a>, <a href="partial_sum" class="wikilink1" title="stl:algorithm:partial_sum">partial_sum</a>
</p>

</div>
<!-- SECTION "accumulate" [3-] --></div>
</body>
</html>
