<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>stl:algorithm:adjacent_difference</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-10-10T09:28:30-0700" />
<meta name="keywords" content="stl,algorithm,adjacent_difference" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/stl/algorithm/adjacent_difference?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=stl:algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/stl/algorithm/adjacent_difference" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/stl/algorithm/adjacent_difference" />
<link rel="canonical" href="adjacent_difference" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='stl:algorithm';var JSINFO = {"id":"stl:algorithm:adjacent_difference","namespace":"stl:algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="adjacent_difference" id="adjacent_difference">adjacent_difference</a></h2>
<div class="level2">

<p>
Syntax:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;numeric&gt;</span>
    output_iterator adjacent_difference<span class="br0">&#40;</span> input_iterator start<span class="sy0">,</span> input_iterator end<span class="sy0">,</span> output_iterator result <span class="br0">&#41;</span><span class="sy0">;</span>
    output_iterator adjacent_difference<span class="br0">&#40;</span> input_iterator start<span class="sy0">,</span> input_iterator end<span class="sy0">,</span> output_iterator result<span class="sy0">,</span> BinaryFunction f <span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>

The adjacent_difference() function calculates the differences between adjacent
elements in the range [start,end) and stores the result starting at result.
(Specifically, the element at start will be copied to result; and then the difference
between the element at start + i and start + (i-1) will be stored at result + i.)
</p>

<p>
If a binary function f is given, it is used instead of the - operator to
compute the differences.
adjacent_difference() runs in <a href="../../complexity" class="wikilink1" title="complexity">linear time</a>.
</p>

<p>
Following example displays the differences between adjacent elements in a vector.

</p>
<pre class="c code c++" style="font-family:monospace;"> <span class="co2">#include &lt;vector&gt;</span>
 <span class="co2">#include &lt;iostream&gt;</span>
 <span class="co2">#include &lt;iterator&gt;</span>
 <span class="co2">#include &lt;algorithm&gt;</span>
 <span class="co2">#include &lt;numeric&gt;</span>
&nbsp;
 <span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span>
 <span class="br0">&#123;</span>
   std<span class="sy0">::</span><span class="me2">vector</span><span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> v<span class="sy0">;</span>
   <span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span> i <span class="sy0">&lt;=</span> <span class="nu0">10</span><span class="sy0">;</span> <span class="sy0">++</span>i<span class="br0">&#41;</span>
     v.<span class="me1">push_back</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
   <span class="co1">// display elements of v</span>
   std<span class="sy0">::</span><span class="me2">copy</span><span class="br0">&#40;</span>v.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> v.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> std<span class="sy0">::</span><span class="me2">ostream_iterator</span><span class="sy0">&lt;</span>int<span class="sy0">&gt;</span><span class="br0">&#40;</span>std<span class="sy0">::</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a><span class="sy0">,</span> <span class="st0">&quot; &quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
   std<span class="sy0">::</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> std<span class="sy0">::</span><span class="me2">endl</span>
&nbsp;
   <span class="co1">// display all differences between elements</span>
   std<span class="sy0">::</span><span class="me2">adjacent_difference</span><span class="br0">&#40;</span>v.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> v.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> std<span class="sy0">::</span><span class="me2">ostream_iterator</span><span class="sy0">&lt;</span>int<span class="sy0">&gt;</span><span class="br0">&#40;</span>std<span class="sy0">::</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a><span class="sy0">,</span> <span class="st0">&quot; &quot;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
   <span class="kw1">return</span> <span class="nu0">0</span><span class="sy0">;</span>
 <span class="br0">&#125;</span></pre>
<p>
When run, this code displays the following output: 

</p>
<pre class="c code c++" style="font-family:monospace;"> <span class="nu0">1</span> <span class="nu0">2</span> <span class="nu0">3</span> <span class="nu0">4</span> <span class="nu0">5</span> <span class="nu0">6</span> <span class="nu0">7</span> <span class="nu0">8</span> <span class="nu0">9</span> <span class="nu0">10</span>
 <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span> <span class="nu0">1</span></pre>
<p>
Related Topics: <a href="accumulate" class="wikilink1" title="stl:algorithm:accumulate">accumulate</a>, <a href="count" class="wikilink1" title="stl:algorithm:count">count</a>, <a href="inner_product" class="wikilink1" title="stl:algorithm:inner_product">inner_product</a>, <a href="partial_sum" class="wikilink1" title="stl:algorithm:partial_sum">partial_sum</a>
</p>

</div>
<!-- SECTION "adjacent_difference" [3-] --></div>
</body>
</html>
