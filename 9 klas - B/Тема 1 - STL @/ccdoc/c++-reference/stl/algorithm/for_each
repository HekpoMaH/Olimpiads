<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>stl:algorithm:for_each</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-10-09T00:44:52-0700" />
<meta name="keywords" content="stl,algorithm,for_each" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/stl/algorithm/for_each?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=stl:algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/stl/algorithm/for_each" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/stl/algorithm/for_each" />
<link rel="canonical" href="for_each" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='stl:algorithm';var JSINFO = {"id":"stl:algorithm:for_each","namespace":"stl:algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="for_each" id="for_each">for_each</a></h2>
<div class="level2">

<p>
Syntax:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;algorithm&gt;</span>
    UnaryFunction for_each<span class="br0">&#40;</span> input_iterator start<span class="sy0">,</span> input_iterator end<span class="sy0">,</span> UnaryFunction f <span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
The for_each() algorithm applies the function f to each of the elements between
start and end. The return value of for_each() is f.
</p>

<p>
For example, the following code snippets define a unary function then use it to
increment all of the elements of an array:
</p>
<pre class="c code c++" style="font-family:monospace;">   template<span class="sy0">&lt;</span>class TYPE<span class="sy0">&gt;</span> <span class="kw4">struct</span> increment <span class="sy0">:</span> public unary_function<span class="sy0">&lt;</span>TYPE<span class="sy0">,</span> void<span class="sy0">&gt;</span> <span class="br0">&#123;</span>
     <span class="kw4">void</span> operator<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#40;</span>TYPE<span class="sy0">&amp;</span> x<span class="br0">&#41;</span> <span class="br0">&#123;</span>
       x<span class="sy0">++;</span>
     <span class="br0">&#125;</span>
   <span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
   ...
&nbsp;
   <span class="kw4">int</span> nums<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#123;</span>3<span class="sy0">,</span> 4<span class="sy0">,</span> 2<span class="sy0">,</span> 9<span class="sy0">,</span> 15<span class="sy0">,</span> 267<span class="br0">&#125;</span><span class="sy0">;</span>
   <span class="kw4">const</span> <span class="kw4">int</span> N <span class="sy0">=</span> <span class="nu0">6</span><span class="sy0">;</span>
&nbsp;
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;Before, nums[] is: &quot;</span><span class="sy0">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> N<span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> nums<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
&nbsp;
   for_each<span class="br0">&#40;</span> nums<span class="sy0">,</span> nums <span class="sy0">+</span> N<span class="sy0">,</span> increment<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;After, nums[] is: &quot;</span><span class="sy0">;</span>
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> N<span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> nums<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy0">;</span>
   <span class="br0">&#125;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span></pre>
<p>
The above code displays the following output:
</p>
<pre class="code">
   Before, nums[] is: 3 4 2 9 15 267
   After, nums[] is: 4 5 3 10 16 268</pre>
</div>
<!-- SECTION "for_each" [3-] --></div>
</body>
</html>
