<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>stl:algorithm:includes</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-10-10T10:52:31-0700" />
<meta name="keywords" content="stl,algorithm,includes" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/stl/algorithm/includes?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=stl:algorithm" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/stl/algorithm/includes" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/stl/algorithm/includes" />
<link rel="canonical" href="includes" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='stl:algorithm';var JSINFO = {"id":"stl:algorithm:includes","namespace":"stl:algorithm"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="includes" id="includes">includes</a></h2>
<div class="level2">

<p>
Syntax:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;algorithm&gt;</span>
&nbsp;
    template<span class="sy0">&lt;</span> typename InIterA<span class="sy0">,</span> typename InIterB <span class="sy0">&gt;</span>
    bool includes<span class="br0">&#40;</span> InIterA start1<span class="sy0">,</span> InIterA end1<span class="sy0">,</span> InIterB start2<span class="sy0">,</span> InIterB end2 <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    template<span class="sy0">&lt;</span> typename InIterA<span class="sy0">,</span> typename InIterB<span class="sy0">,</span> typename StrictWeakOrdering <span class="sy0">&gt;</span>
    bool includes<span class="br0">&#40;</span> InIterA start1<span class="sy0">,</span> InIterA end1<span class="sy0">,</span> InIterB start2<span class="sy0">,</span> InIterB end2<span class="sy0">,</span> StrictWeakOrdering cmp <span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
The includes() algorithm returns <code>true</code> if every element in [start2,end2) is also
in [start1,end1). Both of the given ranges must be sorted in ascending order. There is no requirement that every element in [start1,end1) or [start2,end2) be unique. If some element appears <em>n</em> times in [start2,end2), [start1,end1) must contain the equivalent element at least <em>n</em> times.
</p>

<p>
By default, the &lt; operator is used to compare elements. If the strict weak
ordering function object cmp is given, then it is used instead.
</p>

<p>
includes() runs in <a href="../../complexity" class="wikilink1" title="complexity">linear time</a>.
</p>
<pre class="c code c++" style="font-family:monospace;"> <span class="co2">#include &lt;iostream&gt;</span>
 <span class="co2">#include &lt;vector&gt;</span>
 <span class="co2">#include &lt;list&gt;</span>
 <span class="co2">#include &lt;algorithm&gt;</span>
&nbsp;
 <span class="kw4">int</span> main<span class="br0">&#40;</span><span class="br0">&#41;</span>
 <span class="br0">&#123;</span>
   std<span class="sy0">::</span><span class="me2">vector</span><span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> vec<span class="sy0">;</span>
   <span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">10</span><span class="sy0">;</span> <span class="sy0">++</span>i<span class="br0">&#41;</span>
     vec.<span class="me1">push_back</span><span class="br0">&#40;</span>i<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
   std<span class="sy0">::</span><span class="me2">list</span><span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> lst<span class="sy0">;</span>
   lst.<span class="me1">push_back</span><span class="br0">&#40;</span>2<span class="br0">&#41;</span><span class="sy0">;</span>
   lst.<span class="me1">push_back</span><span class="br0">&#40;</span>4<span class="br0">&#41;</span><span class="sy0">;</span>
   lst.<span class="me1">push_back</span><span class="br0">&#40;</span>6<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
   <span class="kw1">if</span> <span class="br0">&#40;</span>std<span class="sy0">::</span><span class="me2">includes</span><span class="br0">&#40;</span>vec.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> vec.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> lst.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> lst.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="br0">&#41;</span>
     std<span class="sy0">::</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;lst is a subset of vec.&quot;</span> <span class="sy0">&lt;&lt;</span> std<span class="sy0">::</span><span class="me2">endl</span><span class="sy0">;</span>
   <span class="kw1">else</span>
     std<span class="sy0">::</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;lst is NOT a subset of vec.&quot;</span> <span class="sy0">&lt;&lt;</span> std<span class="sy0">::</span><span class="me2">endl</span><span class="sy0">;</span>
&nbsp;
   <span class="kw1">return</span> <span class="nu0">0</span><span class="sy0">;</span>
 <span class="br0">&#125;</span></pre>
<p>
Related Topics: <a href="set_difference" class="wikilink1" title="stl:algorithm:set_difference">set_difference</a>, <a href="set_intersection" class="wikilink1" title="stl:algorithm:set_intersection">set_intersection</a>, <a href="set_symmetric_difference" class="wikilink1" title="stl:algorithm:set_symmetric_difference">set_symmetric_difference</a>, <a href="set_union" class="wikilink1" title="stl:algorithm:set_union">set_union</a>
</p>

</div>
<!-- SECTION "includes" [3-] --></div>
</body>
</html>
