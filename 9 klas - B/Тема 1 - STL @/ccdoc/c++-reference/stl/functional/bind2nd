<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>stl:functional:bind2nd</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-01-25T14:46:42-0800" />
<meta name="keywords" content="stl,functional,bind2nd" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/stl/functional/bind2nd?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=stl:functional" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/stl/functional/bind2nd" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/stl/functional/bind2nd" />
<link rel="canonical" href="bind2nd" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='stl:functional';var JSINFO = {"id":"stl:functional:bind2nd","namespace":"stl:functional"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="bind2nd" id="bind2nd">bind2nd</a></h2>
<div class="level2">

<p>

Syntax:

</p>
<pre class="c code c++" style="font-family:monospace;">  template <span class="sy0">&lt;</span>class Operation<span class="sy0">,</span> class T<span class="sy0">&gt;</span>
    binder2nd<span class="sy0">&lt;</span>Operation<span class="sy0">&gt;</span> bind2nd <span class="br0">&#40;</span><span class="kw4">const</span> Operation<span class="sy0">&amp;</span> op<span class="sy0">,</span> <span class="kw4">const</span> T<span class="sy0">&amp;</span> x<span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
bind the second argument of the binary function.
</p>

<p>
For example:
</p>
<pre class="c code c++" style="font-family:monospace;"><span class="co2">#include &lt;iostream&gt;</span>
using std<span class="sy0">::</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a><span class="sy0">;</span>
using std<span class="sy0">::</span><span class="me2">endl</span><span class="sy0">;</span>
using std<span class="sy0">::</span><span class="me2">boolalpha</span><span class="sy0">;</span>
<span class="co2">#include &lt;algorithm&gt;</span>
using std<span class="sy0">::</span><span class="me2">transform</span><span class="sy0">;</span>
<span class="co2">#include &lt;functional&gt;</span>
using std<span class="sy0">::</span><span class="me2">bind2nd</span><span class="sy0">;</span>
using std<span class="sy0">::</span><span class="me2">less</span><span class="sy0">;</span>
&nbsp;
<span class="kw4">int</span> main<span class="br0">&#40;</span><span class="kw4">int</span> argc<span class="sy0">,</span> <span class="kw4">char</span> <span class="sy0">**</span>argv<span class="br0">&#41;</span> <span class="br0">&#123;</span>
  <span class="kw4">int</span> a1<span class="br0">&#91;</span><span class="br0">&#93;</span><span class="sy0">=</span> <span class="br0">&#123;</span>0<span class="sy0">,</span>1<span class="sy0">,</span>2<span class="sy0">,</span>3<span class="sy0">,</span>4<span class="sy0">,</span>5<span class="br0">&#125;</span><span class="sy0">;</span>
  <span class="kw4">const</span> size_t SIZE<span class="sy0">=</span> <span class="kw4">sizeof</span><span class="br0">&#40;</span>a1<span class="br0">&#41;</span> <span class="sy0">/</span> <span class="kw4">sizeof</span><span class="br0">&#40;</span><span class="sy0">*</span>a1<span class="br0">&#41;</span><span class="sy0">;</span>
  bool is_less<span class="br0">&#91;</span>SIZE<span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#123;</span><span class="kw2">false</span><span class="br0">&#125;</span><span class="sy0">;</span>
  transform<span class="br0">&#40;</span>a1<span class="sy0">,</span> a1<span class="sy0">+</span>SIZE<span class="sy0">,</span> is_less<span class="sy0">,</span> bind2nd<span class="br0">&#40;</span>less<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">,</span> 3<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
  <span class="kw1">for</span><span class="br0">&#40;</span>size_t i<span class="sy0">=</span><span class="nu0">0</span><span class="sy0">;</span> i<span class="sy0">&lt;</span>SIZE<span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
    <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> a1<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; &lt; 3 :&quot;</span><span class="sy0">&lt;&lt;</span> boolalpha <span class="sy0">&lt;&lt;</span> is_less<span class="br0">&#91;</span>i<span class="br0">&#93;</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;;</span>
  <span class="br0">&#125;</span>
  <span class="kw1">return</span> EXIT_SUCCESS<span class="sy0">;</span>
<span class="br0">&#125;</span></pre>
</div>
</div>
</body>
</html>
