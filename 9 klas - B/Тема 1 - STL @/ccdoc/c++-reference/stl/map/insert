<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>stl:map:insert</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2010-01-04T13:30:36-0800" />
<meta name="keywords" content="stl,map,insert" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/stl/map/insert?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=stl:map" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/stl/map/insert" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/stl/map/insert" />
<link rel="canonical" href="insert" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='stl:map';var JSINFO = {"id":"stl:map:insert","namespace":"stl:map"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="insert" id="insert">insert</a></h2>
<div class="level2">

<p>
Syntax:
</p>
<pre class="c code c++" style="font-family:monospace;"><span class="co2">#include &lt;map&gt;</span>
iterator insert<span class="br0">&#40;</span> iterator pos<span class="sy0">,</span> <span class="kw4">const</span> TYPE<span class="sy0">&amp;</span> pair <span class="br0">&#41;</span><span class="sy0">;</span>
<span class="kw4">void</span> insert<span class="br0">&#40;</span> input_iterator start<span class="sy0">,</span> input_iterator end <span class="br0">&#41;</span><span class="sy0">;</span>
pair<span class="sy0">&lt;</span>iterator<span class="sy0">,</span>bool<span class="sy0">&gt;</span> insert<span class="br0">&#40;</span> <span class="kw4">const</span> TYPE<span class="sy0">&amp;</span> pair <span class="br0">&#41;</span><span class="sy0">;</span></pre>
<p>
There are three versions of the <code>insert</code> method for maps:

</p>
<ol>
<li class="level1"><div class="li"> inserts <code>pair</code> after the element at <code>pos</code> (where <code>pos</code> is really just a suggestion as to where <code>pair</code> should go, since sets and maps are ordered), and returns an iterator to that element.</div>
</li>
<li class="level1"><div class="li"> inserts a range of elements from <code>start</code> to <code>end</code>.</div>
</li>
<li class="level1"><div class="li"> inserts <code>pair&lt;key,val&gt;</code>, but only if no element with key <code>key</code> already exists. The return value is an iterator to the element inserted (or an existing pair with key <code>key</code>), and a boolean which is true if an insertion took place.</div>
</li>
</ol>

<p>

For example, the following code uses insert function (along with <a href="../utility/make_pair" class="wikilink1" title="stl:utility:make_pair">make_pair</a>) to insert some data into a map, and then displays that data:
</p>
<pre class="c code c++" style="font-family:monospace;">map<span class="sy0">&lt;</span>string<span class="sy0">,</span>int<span class="sy0">&gt;</span> theMap<span class="sy0">;</span>
theMap.<span class="me1">insert</span><span class="br0">&#40;</span> make_pair<span class="br0">&#40;</span> <span class="st0">&quot;Key 1&quot;</span><span class="sy0">,</span> <span class="sy0">-</span>1 <span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
theMap.<span class="me1">insert</span><span class="br0">&#40;</span> make_pair<span class="br0">&#40;</span> <span class="st0">&quot;Another key!&quot;</span><span class="sy0">,</span> 32 <span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
theMap.<span class="me1">insert</span><span class="br0">&#40;</span> make_pair<span class="br0">&#40;</span> <span class="st0">&quot;Key the Three&quot;</span><span class="sy0">,</span> 66667 <span class="br0">&#41;</span> <span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
map<span class="sy0">&lt;</span>string<span class="sy0">,</span>int<span class="sy0">&gt;::</span><span class="me2">iterator</span> iter<span class="sy0">;</span>
<span class="kw1">for</span><span class="br0">&#40;</span> iter <span class="sy0">=</span> theMap.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> iter <span class="sy0">!=</span> theMap.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="sy0">++</span>iter <span class="br0">&#41;</span> <span class="br0">&#123;</span>
  <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;Key: '&quot;</span> <span class="sy0">&lt;&lt;</span> iter<span class="sy0">-&gt;</span>first <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;', Value: &quot;</span> <span class="sy0">&lt;&lt;</span> iter<span class="sy0">-&gt;</span>second <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
<span class="br0">&#125;</span></pre>
<p>
When run, the above code displays this output:
</p>
<pre class="code">
Key: 'Another key!', Value: 32
Key: 'Key 1', Value: -1
Key: 'Key the Three', Value: 66667</pre>
<p>
Note that because maps are sorted containers, the output is sorted by the key
value. In this case, since the map key data type is <a href="../../string/start" class="wikilink1" title="string:start">string</a>, the map is sorted
alphabetically by key.
</p>

<p>
Related Topics: <a href="map_operators" class="wikilink1" title="stl:map:map_operators">[] operator</a>
</p>

</div>
<!-- SECTION "insert" [3-] --></div>
</body>
</html>
