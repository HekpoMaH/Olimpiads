<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>stl:set:equal_range</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-10-09T06:05:16-0700" />
<meta name="keywords" content="stl,set,equal_range" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/stl/set/equal_range?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=stl:set" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/stl/set/equal_range" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/stl/set/equal_range" />
<link rel="canonical" href="equal_range" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='stl:set';var JSINFO = {"id":"stl:set:equal_range","namespace":"stl:set"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="equal_range" id="equal_range">equal_range</a></h2>
<div class="level2">

<p>
Syntax:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;set&gt;</span>
    pair<span class="sy0">&lt;</span>iterator<span class="sy0">,</span> iterator<span class="sy0">&gt;</span> equal_range<span class="br0">&#40;</span> <span class="kw4">const</span> key_type<span class="sy0">&amp;</span> key <span class="br0">&#41;</span><span class="sy0">;</span>
    pair<span class="sy0">&lt;</span>const_iterator<span class="sy0">,</span> const_iterator<span class="sy0">&gt;</span> equal_range<span class="br0">&#40;</span> <span class="kw4">const</span> key_type<span class="sy0">&amp;</span> key <span class="br0">&#41;</span> <span class="kw4">const</span><span class="sy0">;</span></pre>
<p>
The function equal_range() returns two iterators - one to the first element
that contains key, another to a point just after the last element that contains
key. In set containers, where no duplicate keys are allowed, the range will include one element at most.
</p>

<p>
If key does not match any key in the container, both the returned pointers point to nearest value greater than key, if any, or to set::end if key is greater than all the elements in the container.
</p>

<p>
Example:

</p>
<pre class="c code c++" style="font-family:monospace;"><span class="co1">// set::equal_elements</span>
<span class="co2">#include &lt;iostream&gt;</span>
<span class="co2">#include &lt;set&gt;</span>
using namespace std<span class="sy0">;</span>
&nbsp;
<span class="kw4">int</span> main <span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
  set<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> myset<span class="sy0">;</span>
  pair<span class="sy0">&lt;</span>set<span class="sy0">&lt;</span>int<span class="sy0">&gt;::</span><span class="me2">iterator</span><span class="sy0">,</span>set<span class="sy0">&lt;</span>int<span class="sy0">&gt;::</span><span class="me2">iterator</span><span class="sy0">&gt;</span> ret<span class="sy0">;</span>
&nbsp;
  <span class="kw1">for</span> <span class="br0">&#40;</span><span class="kw4">int</span> i<span class="sy0">=</span><span class="nu0">1</span><span class="sy0">;</span> i<span class="sy0">&lt;=</span><span class="nu0">5</span><span class="sy0">;</span> i<span class="sy0">++</span><span class="br0">&#41;</span> myset.<span class="me1">insert</span><span class="br0">&#40;</span>i<span class="sy0">*</span>10<span class="br0">&#41;</span><span class="sy0">;</span>   <span class="co1">// set: 10 20 30 40 50</span>
&nbsp;
  ret <span class="sy0">=</span> myset.<span class="me1">equal_range</span><span class="br0">&#40;</span>30<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
  <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;lower bound points to: &quot;</span> <span class="sy0">&lt;&lt;</span> <span class="sy0">*</span>ret.<span class="me1">first</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
  <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;upper bound points to: &quot;</span> <span class="sy0">&lt;&lt;</span> <span class="sy0">*</span>ret.<span class="me1">second</span> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
&nbsp;
  <span class="kw1">return</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="br0">&#125;</span></pre>
</div>
<!-- SECTION "equal_range" [3-] --></div>
</body>
</html>
