<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>string:compare</title>
<meta name="generator" content="DokuWiki Release 2009-12-25c &quot;Lemming&quot;" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-10-10T20:05:13-0700" />
<meta name="keywords" content="string,compare" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/string/compare?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=string" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/string/compare" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/string/compare" />
<link rel="canonical" href="compare" />
<link rel="stylesheet" media="all" type="text/css" href="../lib/exe/css.php@s=all&amp;t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="screen" type="text/css" href="../lib/exe/css.php@t=custom1&amp;tseed=1265723194" />
<link rel="stylesheet" media="print" type="text/css" href="../lib/exe/css.php@s=print&amp;t=custom1&amp;tseed=1265723194" />
<script type="text/javascript" charset="utf-8" ><!--//--><![CDATA[//><!--
var NS='string';var JSINFO = {"id":"string:compare","namespace":"string"};
//--><!]]></script>
<script type="text/javascript" charset="utf-8" src="../lib/exe/js.php@tseed=1265723194" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="compare" id="compare">compare</a></h2>
<div class="level2">

<p>
Syntax:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;string&gt;</span>
    <span class="kw4">int</span> compare<span class="br0">&#40;</span> <span class="kw4">const</span> string<span class="sy0">&amp;</span> str <span class="br0">&#41;</span> <span class="kw4">const</span><span class="sy0">;</span>
    <span class="kw4">int</span> compare<span class="br0">&#40;</span> <span class="kw4">const</span> Char<span class="sy0">*</span> str <span class="br0">&#41;</span> <span class="kw4">const</span><span class="sy0">;</span>
    <span class="kw4">int</span> compare<span class="br0">&#40;</span> size_type index<span class="sy0">,</span> size_type length<span class="sy0">,</span> <span class="kw4">const</span> string<span class="sy0">&amp;</span> str <span class="br0">&#41;</span> <span class="kw4">const</span><span class="sy0">;</span>
    <span class="kw4">int</span> compare<span class="br0">&#40;</span> size_type index<span class="sy0">,</span> size_type length<span class="sy0">,</span> <span class="kw4">const</span> string<span class="sy0">&amp;</span> str<span class="sy0">,</span> size_type index2<span class="sy0">,</span> size_type length2 <span class="br0">&#41;</span> <span class="kw4">const</span><span class="sy0">;</span>
    <span class="kw4">int</span> compare<span class="br0">&#40;</span> size_type index<span class="sy0">,</span> size_type length<span class="sy0">,</span> <span class="kw4">const</span> Char<span class="sy0">*</span> str<span class="sy0">,</span> size_type length2 <span class="sy0">=</span> npos <span class="br0">&#41;</span> <span class="kw4">const</span><span class="sy0">;</span></pre>
<p>
The compare() function either compares str to the current string in a variety
of ways, returning

</p>
<table class="inline">
	<tr class="row0">
		<th class="col0 leftalign">Return Value      </th><th class="col1">Case</th>
	</tr>
	<tr class="row1">
		<td class="col0 leftalign">less than zero    </td><td class="col1">this &lt; str</td>
	</tr>
	<tr class="row2">
		<td class="col0 leftalign">zero              </td><td class="col1">this == str</td>
	</tr>
	<tr class="row3">
		<td class="col0">greater than zero </td><td class="col1">this &gt; str</td>
	</tr>
</table>

<p>

The various functions either:

</p>
<ul>
<li class="level1"><div class="li"> compare str to the current string,</div>
</li>
<li class="level1"><div class="li"> compare str to a substring of the current string, starting at index for length characters,</div>
</li>
<li class="level1"><div class="li"> compare a substring of str to a substring of the current string, where index2 and length2 refer to str and index and length refer to the current string,</div>
</li>
<li class="level1"><div class="li"> or compare a substring of str to a substring of the current string, where the substring of str begins at zero and is length2 characters long, and the substring of the current string begins at index and is length characters long.</div>
</li>
</ul>

<p>

For example, the following code uses compare() to compare four strings with each other:
</p>
<pre class="c code c++" style="font-family:monospace;">   <span class="kw4">string</span> names<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy0">=</span> <span class="br0">&#123;</span><span class="st0">&quot;Homer&quot;</span><span class="sy0">,</span> <span class="st0">&quot;Marge&quot;</span><span class="sy0">,</span> <span class="st0">&quot;3-eyed fish&quot;</span><span class="sy0">,</span> <span class="st0">&quot;inanimate carbon rod&quot;</span><span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> <span class="nu0">4</span><span class="sy0">;</span> i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> j <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> j <span class="sy0">&lt;</span> <span class="nu0">4</span><span class="sy0">;</span> j<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
       <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> names<span class="br0">&#91;</span>i<span class="br0">&#93;</span>.<span class="me1">compare</span><span class="br0">&#40;</span> names<span class="br0">&#91;</span>j<span class="br0">&#93;</span> <span class="br0">&#41;</span> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; &quot;</span><span class="sy0">;</span>
     <span class="br0">&#125;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl<span class="sy0">;</span>
   <span class="br0">&#125;</span></pre>
<p>
Data from the above code was used to generate this table, which shows how the
various strings compare to eachother:

</p>
<table class="inline">
	<tr class="row0">
		<th class="col0"> </th><th class="col1"> Homer </th><th class="col2"> Marge </th><th class="col3"> 3-eyed fish </th><th class="col4"> inanimate carbon rod </th>
	</tr>
	<tr class="row1">
		<td class="col0">“Homer”.compare( x )</td><td class="col1">0</td><td class="col2">-1</td><td class="col3">1</td><td class="col4">-1</td>
	</tr>
	<tr class="row2">
		<td class="col0">“Marge”.compare( x )</td><td class="col1">1</td><td class="col2">0</td><td class="col3">1</td><td class="col4">-1</td>
	</tr>
	<tr class="row3">
		<td class="col0">“3-eyed fish”.compare( x )</td><td class="col1">-1</td><td class="col2">-1</td><td class="col3">0</td><td class="col4">-1</td>
	</tr>
	<tr class="row4">
		<td class="col0">“inanimate carbon rod”.compare( x )</td><td class="col1">1</td><td class="col2">1</td><td class="col3">1</td><td class="col4">0</td>
	</tr>
</table>

<p>

Related Topics: <a href="string_operators" class="wikilink1" title="string:string_operators">String operators</a>
</p>

</div>
</div>
</body>
</html>
