#include<iostream>
using namespace std;
string a[51];
int b[51][51];
int n,m,x,y,px,py;
int findPrinces() {
    int i,j,br=0;
    for(i=0;i<n;i++)
        for(j=0;j<m;j++)
            if(a[i][j]=='P')
                br++;
    return br;
}
void findEliCoords() {
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            if(a[i][j]=='E') {
                x=i;
                y=j;
                return;
            }
}
void findWay(int i,int j,int lvl=0) {
    if(j<0)
        j=m-1;
    else if(j>=m)
        j=0;
    if(i<0)
        i=n-1;
    else if(i>=n)
        i=0;
    if(a[i][j]=='#') {
        b[i][j]=-1;
        return;
    }
    if(b[i][j]>=lvl)
        b[i][j]=lvl;
    else
        return;
    findWay(i+1,j,lvl+1);
    findWay(i,j+1,lvl+1);
    findWay(i-1,j,lvl+1);
    findWay(i,j-1,lvl+1);
}
void findClosestPrince() {
    int min=1000;
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            if(a[i][j]=='P' && b[i][j]<min) {
                min=b[i][j];
                px=i;
                py=j;
            }
}
void findExit() {
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            if(a[i][j]=='X') {
                px=i;
                py=j;
                return;
            }
}
int main() {
    int i,j,k,l,s=0;
    scanf("%d %d",&n,&m);
    for(i=0;i<n;i++) {
        cin >> a[i];
    }
    k=findPrinces();
    findEliCoords();
    for(i=0;i<k;i++) {
        for(j=0;j<n;j++)
            for(l=0;l<m;l++)
                b[j][l]=1000;
        b[x][y]=0;
        findWay(x,y);
        findClosestPrince();
        a[px][py]='.';
        if(b[px][py]==1000) {
            cout << -1 << endl;
            return 0;
        }
        else
            s+=b[px][py];
        x=px;
        y=py;
    }
    for(j=0;j<n;j++)
        for(l=0;l<m;l++)
            b[j][l]=1000;
    findExit();
    findWay(x,y);
    if(b[px][py]==1000)
        cout << -1 << endl;
    else {
        s+=b[px][py];
        cout << s << endl;
    }
    return 0;
}
