#include<iostream>
#include<queue>
#include<vector>
#include<algorithm>
using namespace std;
long long c[5][3]={{1,0},{0,1},{-1,0},{0,-1}};
long long n,m,i,j,ij,ij1,ij2,x,y,xx,yy,x1,x2,y1,y2,z1,z2,ans,b[51][51],br,f,min1=100000,d[8];
queue <long long> q;
vector < pair <long, long> > v;
char a[51][51];
void wave (long long s1, long long s2, long long f1, long long f2)
{
   b[s1][s2]=1;
   q.push(s1);
   q.push(s2);
   while(!q.empty())
   {
      x=q.front();
      q.pop();
      y=q.front();
      q.pop(); 
	  if (x==f1 && y==f2) {ans=ans+b[f1][f2]-1;break;}
	  for(ij=0;ij<=3;ij++)
      {
	     xx=x+c[ij][0];
	     yy=y+c[ij][1];
	     if (xx==n+1) {xx=1;}
	     if (yy==m+1) {yy=1;}
	     if (xx==0) {xx=n;}
	     if (yy==0) {yy=m;}
		 if (b[xx][yy]==0 && a[xx][yy]!='#')
		 {
		    b[xx][yy]=b[x][y]+1;
		    q.push(xx);
		    q.push(yy);
		 }
	  }
   }
}
int main()
{
	cin>>n>>m;
	v.push_back(make_pair(0,0));
	for(i=1;i<=n;i++)
	{
	   for(j=1;j<=m;j++)
	   {
	      cin>>a[i][j];
	      if (a[i][j]=='E') {x1=i;x2=j;}
	      if (a[i][j]=='P') {br++;v.push_back(make_pair(i,j));y1=i;y2=j;}
	      if (a[i][j]=='X') {z1=i;z2=j;}
	   }
	}
	f=1;
	for(i=1;i<=br;i++)
	{
	   d[i]=i;
	   f=f*i;
	}
	for(i=1;i<=f;i++)
	{
	   ans=0;
	   for(j=1;j<=br+1;j++)
	   {
	      if (j==1) {wave(x1,x2,(v[d[j]]).first,(v[d[j]]).second);}
	      else if (j==br+1) {wave((v[d[j-1]]).first,(v[d[j-1]]).second,z1,z2);}
	           else {wave((v[d[j-1]]).first,(v[d[j-1]]).second,(v[d[j]]).first,(v[d[j]]).second);}
          for(ij1=1;ij1<=n;ij1++)
	      {
	         for(ij2=1;ij2<=m;ij2++)
	         {
	            b[ij1][ij2]=0;
	         }
	      }
	      while(!q.empty())
          {
	         q.pop();
	      }
	   }
	   if (ans<min1) {min1=ans;}
       if (i!=f) {next_permutation(d+1,d+br+1);}
	}
	cout<<min1<<endl;
	//system("pause");
	return 0;
}
