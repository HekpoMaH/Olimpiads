#include <iostream>
#include <queue>
#include <vector>
#include <cmath>
using namespace std;

vector<int> a[2502];
bool used[8][2502];
int bg, nd;
int cts, ctp;
vector<int> pr;
int lv[8][2502];
int mas[16];
void read()
{
     int n,m;
     char mt[64][64];
     cin >> n >> m;
     for(int i=0; i<n; i++)
     for(int j=0; j<m; j++)
     {
             cin >> mt[i][j];
     }
     for(int i=0; i<n; i++)
     for(int j=0; j<m; j++)
     {
             if(mt[i][j]!='#')
             {
                              if(i==0){ if(mt[n-1][j]!='#' && n!=1) a[i*m+j].push_back((n-1)*m+j);}
                              else if(mt[i-1][j]!='#' && n!=1) a[i*m+j].push_back(i*m-m);
                              
                              if(j==0) {if(mt[i][m-1]!='#' && m!=1) a[i*m+j].push_back(m*i+m-1);}
                              else if(mt[i][j-1]!='#' && m!=1) a[i*m+j].push_back(m*i+j-1);
                              
                              if(i==n-1){ if(mt[0][j]!='#' && n!=1) a[i*m+j].push_back(j);}
                              else if(mt[i+1][j]!='#' && n!=1) a[i*m+j].push_back(i*m+n);
                              //cout << j << ' ';
                              if(j==m-1) {if(mt[i][0]!='#' && m!=1) a[i*n+j].push_back(m*i);}
                              else if(mt[i][j+1]!='#' && m!=1){ a[i*m+j].push_back(m*i+j+1); }
             }
             if(mt[i][j]=='E') { mas[0]=m*i+j;}
             if(mt[i][j]=='P') { pr.push_back(n*i+j); ctp++; }
             if(mt[i][j]=='X') { mas[8]=m*i+j;}
     }
    /* for(int i=0; i<n*m; i++){ 
             cout << i << '=';
     for(int j=0; j<a[i].size(); j++)
     cout << a[i][j] << ' ';cout << endl; }*/
}

long long bfs(int bg, int k)
{
     queue<int> q;
     q.push(bg);
     lv[k][bg]=0;
     used[k][bg]=1;
     while(!q.empty())
     {
                      int i=q.front();
                      q.pop();
                      for(int j=0; j<a[i].size(); j++)
                      {
                              if(!used[k][a[i][j]]){
                                                    used[k][a[i][j]]=1;
                                                 lv[k][a[i][j]]=lv[k][i]+1;
                                                 q.push(a[i][j]);
                                                 }
                      }
     }
}
long long get(int i, int s)
{
     return lv[i][s];
}

//long long findmin(i,)

int main()
{
    read();
    int n=pr.size();
    mas[n+1]=mas[8];
    for(int i=0; i<n; i++)
    mas[i+1]=pr[i];
    for(int i=0; i<n+1; i++)
    bfs(mas[i],i);   
   // cout << lv[1][mas[8]] << endl;
   if(n!=0)
   {if(lv[0][pr[0]]+lv[1][mas[n+1]]==0) cout << -1 << endl;
     else cout << lv[0][pr[0]]+lv[1][mas[n+1]] << endl;}
     else {
          if(lv[0][mas[8]]==0) cout << -1 << endl; else
          cout << lv[0][mas[8]] << endl;}
    /*int res, mn;
    for(int i=1; i<=n; i++)
    {
            res=findmin(0,i,1,n);     
            if(res<mn) mn=res;
    }*/
    return 0;
}
                          
