#include<cstdio>
#include<cmath>

#define MAX 50002

int primes[MAX],br_pr;
int n;
int br_sums;
//int solutions[MAX]={0,1,2,3,4,6,9,12,17,23,30,40,52,67,87,111,140,175,219,272,336,413,504,614,744,899,1083,1298,1552,1850,2198,2605,3079,3630,4268,5007,5861,6845,7979,9282,10776,12488,14445,16681,19232,22134,25436,29186,33439,38257,43709,49871,56826,64671,73506,83447,94625,107175,121255,137038,154709,174482,196583,221265,248807,279516,313727,351808,394170,441250,493538,551573,615933,687262,766262,853692,950393,1057278,1175344,1305679,1449471,1608014,1782712,1975108,2186867,2419812,2675925,2957342,3266409,3605666,3977861,4385994,4833306,5323313,5859833,6447003,7089299,7791567,8559069,9397474,10312927,11312080,12402104,13590769,14886458,16298212,17835813,19509801,21331548,23313328,25468365,27810910,30356317,33121140,36123177};

void gen_sum(int csum,int last) {
	if(csum>n)return;
	if(csum==n) ++br_sums;
	for(int i=last;i<br_pr;++i) gen_sum(csum+primes[i],i);
}

int main() {
	scanf("%d",&n);
	
//	if(n%2==1&&solutions[n/2]!=0) {
//		printf("%d\n",solutions[n/2]);
//		return 0;
//	}
	
	primes[0]=2;
	br_pr=1;
	for(int i=3;primes[br_pr-1]<=n;i+=2) {
		int val=1;
		for(int j=0;j<br_pr;++j) {
			if(i%primes[j]==0) {
				val=0;break;
			}	
		}
		if(val)primes[br_pr++]=i;
	}
	
//	for(int i=0;i<br_pr;++i) printf("%d,",primes[i]);
//	printf("\n%d\n\n",br_pr);
	
	gen_sum(0,0);
	printf("%d\n",br_sums%primes[br_pr-1]);
	
	return 0;
}
