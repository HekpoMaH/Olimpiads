#include <iostream>
#include <cstdio>
#include <vector>
#include <stack>
#include <queue>
#include <cmath>
using namespace std;
vector<int> b;
int c[50024];
bool a[50024];
int br;
int p;
int n;

bool cor(int j,int m)
{
    m-=b[j];
    while (m>0)
    {
        if (!a[m]) return true;
        m-=b[j];
    }
    return false;
}
    
int main()
{
    int i;
    int n;
    cin >> n;
    bool t=true;
    for (i=2;i<50024;i++)
    {
        if (a[i]==false)
        {
            for (int j=2*i;j<50024;j+=i)
                a[j]=true;
            if (i>n && t) {p=i; t=false;}
            b.push_back(i);
        }
    }
c[1]=0;
c[2]=0;
c[3]=0;
c[4]=1;
c[5]=1;
c[6]=2;
c[7]=2;
c[8]=3;
c[9]=4;
c[10]=5;
c[11]=5;
c[12]=7;
c[13]=8;
c[14]=10;
c[15]=12;
c[16]=14;
c[17]=16;
c[18]=19;
c[19]=22;
c[20]=26;
c[21]=30;
c[22]=35;
c[23]=39;
c[24]=46;
c[25]=52;
c[26]=60;
c[27]=67;
c[28]=77;
c[29]=86;
c[30]=98;
c[31]=110;
c[32]=124;
c[33]=140;
c[34]=157;
c[35]=175;
c[36]=197;
c[37]=218;
c[38]=244;
c[39]=272;
c[40]=302;
c[41]=335;
c[42]=372;
c[43]=412;
c[44]=456;
c[45]=504;
c[46]=557;
c[47]=613;
c[48]=677;
c[49]=744;
c[50]=819;
c[51]=899;
c[52]=987;
c[53]=1082;
c[54]=1186;
c[55]=1298;
c[56]=1420;
c[57]=1552;
c[58]=1695;
c[59]=1849;
c[60]=2018;
c[61]=2197;
c[62]=2394;
c[63]=2605;
c[64]=2833;
c[65]=3079;
c[66]=3344;
c[67]=3629;
c[68]=3936;
c[69]=4268;
c[70]=4624;
c[71]=5006;
c[72]=5419;
c[73]=5860;
c[74]=6336;
c[75]=6845;
c[76]=7393;
c[77]=7979;
c[78]=8608;
c[79]=9281;
c[80]=10003;
c[81]=10776;
c[82]=11603;
c[83]=12487;
c[84]=13435;
c[85]=14445;
c[86]=15527;
c[87]=16681;
c[88]=17914;
c[89]=19231;
c[90]=20636;
c[91]=22134;
c[92]=23732;
c[93]=25436;
c[94]=27251;
c[95]=29186;
c[96]=31246;
c[97]=33438;
c[98]=35772;
c[99]=38257;
c[100]=40899;
c[101]=43708;
c[102]=46696;
c[103]=49870;
c[104]=53243;
c[105]=56826;
c[106]=60631;
c[107]=64670;
c[108]=68957;
c[109]=73505;
c[110]=78331;
c[111]=83447;
c[112]=88874;
c[113]=94624;
c[114]=100719;
c[115]=107175;
c[116]=114014;
c[117]=121255;
c[118]=128923;
c[119]=137038;
c[120]=145627;
c[121]=154709;
c[122]=164320;
c[123]=174482;
c[124]=185225;
c[125]=196583;
c[126]=208585;
c[127]=221264;
c[128]=234658;
c[129]=248807;
c[130]=263745;
c[131]=279515;
c[132]=296161;
c[133]=313727;
c[134]=332258;
c[135]=351808;
c[136]=372427;
c[137]=394169;
c[138]=417088;
c[139]=441249;
c[140]=466711;
c[141]=493538;
c[142]=521804;
c[143]=551573;
c[144]=582925;
c[145]=615933;
c[146]=650686;
c[147]=687262;
c[148]=725757;
c[149]=766261;
c[150]=808872;
c[151]=853691;
c[152]=900827;
c[153]=950393;
c[154]=1002502;
c[155]=1057278;
c[156]=1114849;
c[157]=1175343;
c[158]=1238904;
c[159]=1305679;
c[160]=1375815;
c[161]=1449471;
c[162]=1526812;
c[163]=1608013;
c[164]=1693247;
c[165]=1782712;
c[166]=1876598;
c[167]=1975107;
c[168]=2078460;
c[169]=2186867;
c[170]=2300576;
c[171]=2419812;
c[172]=2544843;
c[173]=2675924;
c[174]=2813326;
c[175]=2957342;
c[176]=3108265;
c[177]=3266409;
c[178]=3432097;
c[179]=3605665;
c[180]=3787467;
c[181]=3977860;
c[182]=4177239;
c[183]=4385994;
c[184]=4604537;
c[185]=4833306;
c[186]=5072740;
c[187]=5323313;
c[188]=5585505;
c[189]=5859833;
c[190]=6146816;
c[191]=6447002;
c[192]=6760967;
c[193]=7089298;
c[194]=7432618;
c[195]=7791567;
c[196]=8166824;
c[197]=8559068;
c[198]=8969035;
c[199]=9397473;
c[200]=9845164;
if (n>200)
{
c[n]=0;
for (i=0;b[i]<n;i++)
{
    if (cor(i,n)){ c[n]+=(c[b[i]]+1);}
}
}
c[n]%=p;
printf("%d\n",c[n]);
return 0;   
}
