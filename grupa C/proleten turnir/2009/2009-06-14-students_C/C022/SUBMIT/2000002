#include<iostream>
#include<vector>
#include<queue>

using namespace std;

int p,g,o,f,n,m,x,y,summa;

bool usedP[256],usedG[256];

vector<int > t;

vector<vector<int > > a;

vector<int > P[200],G[200];

void dfs(int x, int y, int nivo, bool q){
           
     if(x==y) return;
     
     if(q){ //ot Pesho
           
           usedP[x]=1;
           
           P[x].push_back(nivo);
           
           for(int i=0;i<a[x].size();i++) if(!usedP[a[x][i]]) dfs(a[x][i],y,nivo+1, q);
           
           usedP[x]=0;
           
           }
           
     else{ //ot Gosho
          
          usedG[x]=1;
           
          G[x].push_back(nivo);
           
          for(int i=0;i<a[x].size();i++) if(!usedG[a[x][i]]) dfs(a[x][i],y,nivo+1, q);
          
          usedG[x]=0;
          
          }
     
     }

int main(){
    
    scanf("%d%d",&n,&m);
    
    a.assign(n,t);
    
    for(int i=0;i<m;i++){
            
            scanf("%d%d",&x,&y);
            
            a[x].push_back(y);
            
            a[y].push_back(x);
            
            }
            
    scanf("%d%d%d%d",&p,&f,&g,&o);
    
    dfs(p,f,0,1);
    
    dfs(g,o,0,0);
    
    usedP[p]=usedG[p]=usedP[f]=usedG[f]=usedP[g]=usedG[g]=usedP[o]=usedG[o]=0;
    
    for(int k=0;k<n;k++){
            
            for(int i=0;i<P[k].size();i++){
                    
                    bool t=0;
                    
                    for(int j=0;j<G[k].size();j++) if(P[k][i]==G[k][j]){t=1; break;}
                    
                    if(t){summa++; break;}
                    
                    }
            
            }
            
    printf("%d\n",summa);
    
    //system("pause");
    
    return 0;
    
    }
