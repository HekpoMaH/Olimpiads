/*
TASK: cross
LANG: C++
*/
#include<cstdio>
using namespace std;
int a[256][256],used[256],way[256][256],way2[256][256];
int dfs(int p,int t,int level)
{
    if(p==t)
    {
        way[p][level]=1;
        return 1;
    }
    int i,j,k=0;
    bool found=0;
    used[p]=1;
    for(i=1;i<=a[p][0];i++)
     if(!used[a[p][i]])
     {
         k=dfs(a[p][i],t,level+1);
         if(k==1)found=1;
     }
    used[p]=0;
    if(found==1)
    {
        way[p][level]=1;
        return 1;
    }
    return 0;
} 
int main()
{
    int x,y,i,j,n,m,s1,e1,s2,e2;
    scanf("%d%d",&n,&m);
    for(i=0;i<m;i++)
    {
        scanf("%d%d",&x,&y);
        a[x][0]++;
        a[x][a[x][0]]=y;
        a[y][0]++;
        a[y][a[y][0]]=x;
    }
    scanf("%d%d%d%d",&s1,&e1,&s2,&e2);
    dfs(s1,e1,0);
    for(i=0;i<n;i++)
    for(j=0;j<=n;j++)
    {
        way2[i][j]=way[i][j];
        way[i][j]=0;
    }
    dfs(s2,e2,0);
    int k,br=0;
    for(i=0;i<n;i++)
    {
        k=0;
        for(j=0;j<=n;j++)
            if(way[i][j]==1&&way2[i][j]==1) k=1;
        if(k==1) br++;
    }
    printf("%d\n",br);
    return 0;
}
