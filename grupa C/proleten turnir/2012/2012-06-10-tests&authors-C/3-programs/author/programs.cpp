//Task: programs
//Author: Rusko Shikov
#include <stdio.h>
#include <iostream>
using namespace std;

const int nmax=1000000;       // максимален брой програми
int a[nmax+1];                // времена за предпроцесване на програмите
int b[nmax+1];                // времена за същинско изпълнение на програмите

int n,k;                      // брой на програмите и брой на изпълненията

int tsum;                     // тук се пресмята времето за изпълнение на всички програми

int max(int x,int y)
{
  if (x>y)
    return x;
  else
    return y;
}

void beginput()
{
  int i;
  scanf("%d%d",&n,&k);
  for (i=1;i<=n;i++)
    scanf("%d",&a[i]);
  for (i=1;i<=n;i++)
    scanf("%d",&b[i]);
  a[0]=0;b[0]=0;
}

int main()
{
  int i,j,p,x;
  beginput();
  // Пресмятаме времето за първо изпълнение на всички програми
  tsum=0;
  // Първо се пресмята кога ще започне предпроцесването на последната програма
  for (p=1;p<=n;p++)
    tsum=tsum+max(a[p-1],a[p-1]+b[p-1]-a[p]);
  // след това се добавя времето за предпроцесване и същинско изпълнение на последната програма
  tsum=tsum+a[n]+b[n];
  printf("%d\n", tsum);
  // обработват се заявките за размени на програми в секторите с последващи изпълнения
  for (p=1;p<k;p++)
  {
    scanf("%d%d",&i,&j);
    // преди да се разменят програмите в сектори i и j
    // от общото време за предното изпълнение се изваждат времената, в които са участвали
    // програмите в сектори i и j
    // тъй като i<j, то сектор i не може да е последен
    // вадим ония членове от сумарното време, в които участват времената на програма от сектор i
    tsum=tsum-max(a[i-1],a[i-1]+b[i-1]-a[i])-max(a[i],a[i]+b[i]-a[i+1]);
    // след това ще вадим членовете, в които участват времената на програма от сектор j
    // ако j=i+1, то членът max(a[j-1],a[j-1]+b[j-1]-a[j]) вече е изваден;
    // ако j>i+1, то тябва да го извадим
    if (j>(i+1))
      tsum=tsum-max(a[j-1],a[j-1]+b[j-1]-a[j]);
    // за сектор j има две възможности - да е последен и да не е
    if (j==n)
      tsum=tsum-a[n]-b[n];  // последен е
    else
      tsum=tsum-max(a[j],a[j]+b[j]-a[j+1]); // не е последен
    // разменяме програмите в сектори i и j
    x=a[i];a[i]=a[j];a[j]=x;
    x=b[i];b[i]=b[j];b[j]=x;
    // добавяме това, което внася като време изпълнението на разменените програми
    // в сектори i и j
    // в сектор i
    tsum=tsum+max(a[i-1],a[i-1]+b[i-1]-a[i])+max(a[i],a[i]+b[i]-a[i+1]);
    // в сектор j
    // ако j=i+1, то членът max(a[j-1],a[j-1]+b[j-1]-a[j]) вече е добавен;
    // ако j>i+1, то тябва да го добавим
    if (j>(i+1))
      tsum=tsum+max(a[j-1],a[j-1]+b[j-1]-a[j]);
    // за сектор j има две възможности - да е последен и да не е
    if (j==n)
      tsum=tsum+a[n]+b[n];  // последен е
    else
      tsum=tsum+max(a[j],a[j]+b[j]-a[j+1]); // не е последен

    printf("%d\n", tsum);
  }
  return 0;
}
