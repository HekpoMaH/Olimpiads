/*
TASK: expres
LANG: C++
*/		 
		  
char digs[12][5][4] = 
						{
								"111",
								"101",
								"101",
								"101",
								"111",
								
								"001",
								"001",
								"001",
								"001",
								"001",

								"111",
								"001",
								"111",
								"100",
								"111",

								"111",
								"001",
								"111",
								"001",
								"111",

								"101",
								"101",
								"111",
								"001",
								"001",

								"111",
								"100",
								"111",
								"001",
								"111",

								"111",
								"100",
								"111",
								"101",
								"111",
						
								"111",
								"001",
								"001",
								"001",
								"001",

								"111",
								"101",
								"111",
								"101",
								"111",

								"111",
								"101",
								"111",
								"001",
								"111",

								"000",
								"010",
								"111",
								"010",
								"000",

								"000",
								"000",
								"111",
								"000",
								"000",

						};

/***********************************/
/***********************************/
/***********************************/
/***********************************/
/***********************************/
						
#include <cstring>
#include <cstdio>						

int N, K;
		   
const int MAXN = 1 << 6;
const int LINELEN = 1 << 8;
char input[5][LINELEN];
		
int row[MAXN];
int sgn[MAXN];
			  
int cres;
int balan;


int rec (int N)

int main () {
	int i, ii, j, k;
/*	
	for (j = 0; j < 12; ++j) {
		for (i = 0; i < 5; ++i) {
			for (k = 0; k < 3; ++k)
				printf ("%c", (digs[j][i][k] == '1' ? '1' : ' '));
			printf ("\n");		 
		}					
		printf ("\n");
	}
*/					
	scanf ("%d %d\n", &N, &K);
	for (i = 0; i < 5; ++i)
		gets (input[i]);

	
	for (i = 0; i < N; ++i) {
//		printf ("*******  %d  ********\n", i);
		for (ii = 0; ii < 10; ++ii) {
			for (j = 0; j < 5; ++j)
				for (k = 0; k < 3; ++k)
					if (digs[ii][j][k] != input[j][i * 6 + k])
						goto ex1;
			ex1:;
			if (k == 3) {
				row[i] = ii;		 
				break;	 
			}
		}
		if (ii == 10) row[i] = -1;
	}

				
	for (i = 1; i < N; ++i)
		sgn[i] =  (input[1][(i-1) * 6 + 4] == '1');
						   
	
	
	return 0;
}

