#include <iostream>
#include <cstdio>
#include <cmath>
#include <map>
#include <algorithm>
#define MAX 1024*1024
using namespace std;

int n, nom[1024][1024];
int k, i, j, q;
map<int, int> m;

struct d { int st, r, otg; } ans[16384];
bool cmp(d a, d b) { return a.st < b.st; }
bool cmp1(d a, d b) { return a.r < b.r; }

int main()
{
for(i=1; i<=10001; i++)
ans[i].otg = MAX;

scanf("%d", &n);
for(i=0; i<n; i++)
for(j=0; j<n; j++)
scanf("%d", &nom[i][j]);

scanf("%d", &k);
for(i=1; i<=k; i++)
{
scanf("%d", &j);
m[j] = i;
ans[i].r = i;
ans[i].st = j;
}

sort(ans + 1, ans + k + 1, cmp);
for(i=1; i<=k; i++)
m[ans[i].st] = i;

for(i=0; i<n; i++)
for(j=0; j<n; j++)
{
q = m[nom[i][j]];
if(q >= 1) ans[q].otg = min(ans[q].otg, i + n - 1 - j);
}

for(i=1; i<=k; i++)
if(ans[i].otg == MAX)
{
if(ans[i - 1].st == ans[i].st && ans[i-1].st != MAX)
ans[i].otg = ans[i-1].otg;
else
for(j=i+1; j <= k && ans[j].st == ans[i].st; j++)
if(ans[j].otg != MAX) { ans[i].otg = ans[j].otg; break; }
}

sort(ans + 1, ans + k + 1, cmp1);
//for(i=1; i<=k; i++)
//cout << ans[i].st << endl;
for(i=1; i<=k; i++)
if(ans[i].otg == MAX) printf("No Solution\n");
else printf("%d\n", ans[i].otg);

return 0;
}
/*
6
1 9 23 166 167 180
23 100 109 166 167 180
88 233 346 890 900 1024
316 393 512 566 966 1111
316 393 800 888 1025 1111
455 818 966 1111 1330 1333
10
890
393
818
1111
167
455
393
88
166
456
*/
